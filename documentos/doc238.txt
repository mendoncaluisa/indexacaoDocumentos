                                                       Revista Gestão em Foco - Edição nº 16 – Ano: 2024


                      DESENVOLVIMENTO DE SISTEMAS WEB MODERNOS

                                  Prof. Flávio Donizeti de Oliveira


Resumo

        Este artigo explora as práticas, ferramentas e técnicas atuais no desenvolvimento de sistemas
web modernos, destacando a evolução das tecnologias web e a emergência de frameworks como React,
Angular e Vue.js. Através de uma revisão detalhada da literatura, discutimos a transição de sites
estáticos para aplicações dinâmicas e ricas em interatividade, culminando na utilização de Single Page
Applications (SPAs).

        Abordamos metodologias essenciais para o desenvolvimento front-end, incluindo
componentização, gerenciamento de estado e ferramentas de build, assim como técnicas de
desenvolvimento back-end com APIs RESTful, GraphQL e arquitetura de microserviços. Além disso,
enfatizamos a importância da performance e otimização através de práticas como lazy loading, code
splitting e caching. Benefícios como produtividade, performance e manutenção são analisados,
juntamente com os desafios inerentes à complexidade, compatibilidade e segurança.

       Concluímos destacando a relevância dessas tecnologias para a gestão eficiente de sistemas web e
sugerimos áreas para pesquisas futuras. Este artigo serve como um guia abrangente para
desenvolvedores e gestores que buscam implementar soluções web modernas e eficazes.




Palavra-chave: React, Desenvolvimento Web, Angular, Vue.JS




revistaonline@unifia.edu.br                                                        Página 215
                                                        Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Introdução

        O desenvolvimento de sistemas web modernos tem sido transformado por avanços tecnológicos
significativos e mudanças nas expectativas dos usuários. Nos últimos anos, frameworks e bibliotecas
como React, Angular e Vue.js emergiram como ferramentas poderosas, permitindo aos desenvolvedores
criar aplicações web mais rápidas, escaláveis e interativas. Este artigo examina essas ferramentas e as
melhores práticas associadas ao desenvolvimento de sistemas web modernos, discutindo suas vantagens,
desafios e o impacto na indústria de software.

Objetivos do Artigo

       Explorar a evolução dos sistemas web e a emergência de frameworks modernos.
       Discutir as melhores práticas e técnicas para desenvolvimento front-end e back-end.
       Analisar casos de uso e estudos de caso relevantes.
       Identificar os desafios e como superá-los no desenvolvimento de sistemas web modernos.

Revisão de Literatura

Evolução dos Sistemas Web

Primeira Geração: Sites Estáticos

        No início, a web era composta por páginas HTML estáticas, oferecendo conteúdo fixo e pouca
interatividade. As páginas eram criadas manualmente e não havia distinção entre conteúdo e
apresentação.

Segunda Geração: Scripts do Lado do Cliente e Servidores Dinâmicos

       A introdução do JavaScript permitiu a criação de páginas web mais interativas.
Simultaneamente, servidores dinâmicos, utilizando linguagens como PHP, ASP e JSP, permitiram a
geração de conteúdo dinâmico baseado em dados do servidor.

Terceira Geração: Aplicações Ricas em Internet (RIA)

        Tecnologias como Flash e Silverlight possibilitaram o desenvolvimento de aplicações ricas, com
interfaces mais sofisticadas e interativas. No entanto, essas tecnologias dependiam de plugins
proprietários.

Quarta Geração: Frameworks Modernos de JavaScript e SPA

       A atual geração de desenvolvimento web é caracterizada pelo uso de frameworks como React,
Angular e Vue.js, que permitem a construção de Single Page Applications (SPAs). Essas ferramentas
oferecem uma experiência de usuário mais fluida e rápida, semelhante a aplicações nativas.


revistaonline@unifia.edu.br                                                         Página 216
                                                          Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Frameworks e Bibliotecas Modernas

React

      Criado pelo Facebook, React se destaca pela sua abordagem de desenvolvimento baseada em
componentes. Ele permite a construção de interfaces de usuário reutilizáveis e declarativas, facilitando a
manutenção e a escalabilidade do código.

Principais Características:

        Componentização: Cada parte da interface é um componente isolado.
        JSX: Uma extensão de sintaxe que permite escrever HTML dentro do JavaScript.
        Virtual DOM: Um conceito que melhora a performance ao minimizar operações diretas no
         DOM real.

Angular

       Mantido pelo Google, Angular é um framework completo que fornece uma solução integrada
para o desenvolvimento de aplicações robustas. Ele é baseado em TypeScript e oferece uma série de
ferramentas nativas para a construção de SPAs.

Principais Características:

        Two-Way Data Binding: Sincronização automática entre o modelo e a interface do usuário.
        Dependency Injection: Facilita a gestão de dependências e a modularização do código.
        Diretivas: Permitem a extensão do HTML com novos atributos e elementos personalizados.

Vue.js

        Conhecido por sua simplicidade e flexibilidade, Vue.js é uma escolha popular tanto para
iniciantes quanto para desenvolvedores experientes. Ele combina as melhores características do React e
do Angular, oferecendo uma curva de aprendizado suave e uma grande adaptabilidade.

Principais Características:

        Reatividade: Sistema de binding de dados reativo que facilita a sincronização de dados.
        Componentes: Modularização similar ao React, permitindo a reutilização de código.
        Ecosistema Rico: Ferramentas como Vue Router para roteamento e Vuex para gerenciamento de
         estado.




revistaonline@unifia.edu.br                                                           Página 217
                                                    Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Metodologia

Desenvolvimento Front-End

Componentização

         A componentização é uma abordagem central no desenvolvimento moderno, permitindo que
partes da interface sejam isoladas em componentes reutilizáveis. Isso promove a modularização e
facilita a manutenção do código.

Exemplo em React:




revistaonline@unifia.edu.br                                                     Página 218
                                                      Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Estado da Aplicação

       Gerenciar o estado de uma aplicação é um desafio crítico. Ferramentas como Redux (para React)
e Vuex (para Vue.js) oferecem soluções eficientes para esse problema, centralizando o estado em um
único store.

Exemplo em Redux:




revistaonline@unifia.edu.br                                                       Página 219
                                                   Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Ferramentas de Build

      Ferramentas como Webpack e Babel são essenciais para otimizar e compatibilizar o código
moderno. Webpack permite a construção de bundles eficientes, enquanto Babel transpila código
moderno para versões compatíveis com navegadores antigos.

Configuração Básica do Webpack:




revistaonline@unifia.edu.br                                                    Página 220
                                                     Revista Gestão em Foco - Edição nº 16 – Ano: 2024




Desenvolvimento Back-End

APIs RESTful

      APIs RESTful são a espinha dorsal da comunicação entre cliente e servidor em aplicações web
modernas. Elas seguem princípios de design que facilitam a escalabilidade e a manutenção.

Exemplo em Node.js com Express:




revistaonline@unifia.edu.br                                                      Página 221
                                                     Revista Gestão em Foco - Edição nº 16 – Ano: 2024


GraphQL

       GraphQL é uma alternativa ao REST, oferecendo consultas mais eficientes e específicas. Ele
permite que os clientes solicitem exatamente os dados de que precisam, evitando overfetching e
underfetching.

Exemplo Básico de GraphQL:




revistaonline@unifia.edu.br                                                      Página 222
                                                        Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Microserviços

      A arquitetura de microserviços divide uma aplicação em serviços pequenos e independentes,
cada um responsável por uma funcionalidade específica. Isso melhora a escalabilidade e facilita a
manutenção.

Exemplo de Arquitetura de Microserviços:

       Serviço de Autenticação: Gerencia a autenticação e autorização de usuários.
       Serviço de Usuários: Gerencia os dados dos usuários.
       Serviço de Produtos: Gerencia o catálogo de produtos.

Performance e Otimização

Lazy Loading

      Lazy loading é uma técnica que carrega componentes e recursos apenas quando são necessários,
melhorando o tempo de carregamento inicial da aplicação.

Exemplo em React:




revistaonline@unifia.edu.br                                                           Página 223
                                                     Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Code Splitting

        O code splitting divide o código em chunks menores, que podem ser carregados sob demanda.
Isso reduz o tamanho do bundle inicial e melhora a performance.

Exemplo com Webpack:




revistaonline@unifia.edu.br                                                      Página 224
                                                        Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Caching

       Utilizar técnicas de caching, tanto no navegador quanto no servidor, é essencial para acelerar a
entrega de conteúdo e reduzir a carga no servidor.

Exemplo de Configuração de Cache no Express:




revistaonline@unifia.edu.br                                                         Página 225
                                                     Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Resultados e Discussão

Benefícios dos Frameworks Modernos

Produtividade

        Frameworks modernos aumentam a produtividade dos desenvolvedores ao fornecer ferramentas
e bibliotecas que simplificam tarefas comuns, como manipulação do DOM, gerenciamento de estado e
roteamento.



Estudo de Caso: Facebook com React

        O Facebook introduziu o React para resolver problemas de manutenção e performance em suas
aplicações web. O uso de componentes reutilizáveis permitiu uma maior consistência e reduziu
significativamente o tempo de desenvolvimento.

Performance

       A utilização de técnicas como Virtual DOM (em React) e mudanças reativas (em Vue.js)
resultou em aplicações web mais rápidas e responsivas.




Estudo de Caso: Netflix com React

       A Netflix utilizou o React para otimizar a performance de sua plataforma, resultando em uma
experiência de usuário mais fluida e rápida, especialmente em dispositivos móveis.

Manutenção

      A modularização do código em componentes e a separação de preocupações facilitam a
manutenção e a escalabilidade das aplicações.




Estudo de Caso: Alibaba com Vue.js

       A Alibaba adotou o Vue.js para construir interfaces de usuário interativas e escaláveis. A
simplicidade e flexibilidade do Vue.js permitiram uma rápida adoção e integração com os sistemas
existentes.




revistaonline@unifia.edu.br                                                      Página 226
                                                       Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Desafios

Complexidade

       Embora poderosos, os frameworks modernos podem introduzir complexidade adicional,
especialmente para novos desenvolvedores. A curva de aprendizado pode ser íngreme, exigindo um
investimento inicial significativo em treinamento e capacitação.

Compatibilidade

       Manter a compatibilidade com navegadores antigos continua sendo um desafio. Ferramentas
como Babel ajudam a transpilar código moderno para versões mais antigas do JavaScript, mas isso pode
adicionar overhead ao processo de desenvolvimento.

Segurança

       Com a crescente sofisticação das aplicações web, a segurança se torna uma preocupação crítica.
É essencial seguir as melhores práticas de segurança, como validação de entrada, proteção contra
ataques XSS e CSRF, e a utilização de HTTPS.




revistaonline@unifia.edu.br                                                        Página 227
                                                          Revista Gestão em Foco - Edição nº 16 – Ano: 2024


Conclusão

       O desenvolvimento de sistemas web modernos é uma área dinâmica e em constante evolução.
Frameworks como React, Angular e Vue.js oferecem uma base sólida para a construção de aplicações
web eficientes, escaláveis e interativas. No entanto, é crucial estar atento aos desafios associados, como
a complexidade e a segurança, e seguir as melhores práticas para garantir que as aplicações atendam às
expectativas dos usuários e mantenham-se seguras e performáticas.




revistaonline@unifia.edu.br                                                           Página 228
                                                     Revista Gestão em Foco - Edição nº 16 – Ano: 2024




Referências

       Livros:
           o Banks, A., & Porcello, E. (2020). Learning React: Modern Patterns for Developing
               React Apps. O'Reilly Media.
           o Seshadri, S. (2018). Angular Up & Running: Learning Angular, Step by Step. O'Reilly
               Media.
           o Copes, F. (2020). The Vue.js Handbook. Independently published.
       Artigos e Tutoriais Online:
           o Documentação oficial do React: reactjs.org
           o Documentação oficial do Angular: angular.io
           o Documentação oficial do Vue.js: vuejs.org
           o Artigos da Mozilla Developer Network (MDN) sobre otimização de performance web:
               developer.mozilla.org




revistaonline@unifia.edu.br                                                      Página 229
