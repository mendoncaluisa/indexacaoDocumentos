ALGORITMO DE BUSCA DISPERSA PARA RESOLUÇÃO DE PROBLEMAS  DE OTIMIZAÇÃO DISCRETOS E CONTÍNUOS   
André Mendes Garcia1 
https://orcid.org/0000-0001-7395-2190 
RESUMO  
Os problemas de otimização são muito complexos de serem resolvidos, pois podem apresentar  múltiplas soluções ótimas, e em determinados casos apenas uma solução ótima global. A formulação  matemática desses problemas é composta de variáveis contínuas e/ou discretas, e possuem funções  lineares e/ou não-lineares. A solução destes problemas por modelagem matemática, através de  solvers, podem não convergir para uma solução factível e/ou demandar muito tempo computacional,  considerando um número elevado de variáveis. Desta forma, a utilização de meta-heurísticas para  solução desses problemas é uma opção bastante atraente e utilizada na literatura. O algoritmo da  meta-heurística busca dispersa (BD) vem se destacando na literatura como um bom algoritmo de  otimização combinatória por tratar da qualidade e diversidade das soluções. O objetivo deste trabalho  é apresentar duas metodologias utilizando o algoritmo de BD para solução de problemas com variáveis  contínuas e discretas. Para tanto, a BD é implementada para solucionar o problema do caixeiro viajante  (PCV), o qual é um problema que contém 100% de variáveis discretas, e também, uma outra versão da  BD é implementada para solucionar o problema de fluxo de potência ótimo (FPO), o qual possui  variáveis contínuas e discretas. Foram utilizadas duas instâncias do PCV e três instâncias do problema  de FPO. Os resultados mostram que a BD resolve os dois tipos de problemas, e, em alguns casos  apresentou resultados melhores se comparado às soluções dos mesmos problemas utilizando os  modelos matemáticos clássicos através de solvers. Conclui-se que, a implementação do algoritmo da  BD não requer muito esforço, e que se pode alcançar bons resultados para solução de problemas de  otimização com variáveis de qualquer natureza. 
Palavras-chave 
Algoritmo; Busca dispersa; Meta-heurística; Otimização. 
1 Professor do Centro Universitário de Adamantina-SP. Doutor em Engenharia Elétrica pela UNESP de Ilha Solteira.  São Paulo, andre@fai.com.br
http://dx.doi.org/10.35265/2236-6717-238-12778    
FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023.  
  

Scattered Search Algorithm for Solving Discrete and Continuous  Optimization Problems 
ABSTRACT 
Optimization problems are very complex to be solved, as they can present multiple optimal solutions  and, in certain cases, only a globally optimal solution. The mathematical formulation of these problems  is composed of continuous and discrete variables with linear and nonlinear functions. The solution of  these problems by mathematical modeling through solvers may not converge to a feasible solution or may demand much computational time, when many variables are considered. Thus, using  metaheuristics to solve these problems is desirable according to the literature. The scatter search (SS)  metaheuristic algorithm has been highlighted in the literature as an excellent combinatorial  optimization algorithm for dealing with quality and diversity solutions. This work aims to present two  methods using the SS algorithm to solve problems with continuous and discrete variables. Therefore,  the SS algorithm is implemented to solve the traveling salesperson problem (TSP), which is a problem  that contains only discrete variables, and also, another version of SS is implemented to solve the  optimal power flow (OPF) problem, which has continuous and discrete variables. Two instances of the  TSP and three instances of the OPF problem were used. The results show that the SS solves both  problems efficiently and presents better results in some cases than the solutions of the same problems  using classical mathematical models through solvers. It is concluded that implementing the SS algorithm does not require much effort and that good results can be achieved for solving optimization  problems with variables of any nature. 
Keywords 
Algorithm; Scattered search; Metaheuristics; Optimization. 
Submetido em: 10/08/2023 – Aprovado em: 10/09/2023 – Publicado em: 19/09/2023
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
1 INTRODUÇÃO 
Solucionar problemas de otimização combinatória é uma das áreas da pesquisa  operacional (PO) que mais demanda pesquisas, pois os problemas são complexos, possuem  variáveis discretas e/ou contínuas, e a formulação matemática pode conter funções lineares  e/ou não lineares. A solução desses problemas pode ser feita por modelos matemáticos,  através de solvers, ou pela utilização de algoritmos de meta-heurísticas. Dada a complexidade  do problema, a solução por modelos matemáticos utilizando solvers, pode não apresentar  uma solução factível ou exigir um tempo computacional muito elevado. A solução desses  problemas por meta-heurísticas, também não garantem soluções factíveis, e em alguns casos  também podem exigir grandes tempos computacionais. Entretanto, a utilização de meta heurísticas nesses problemas vem sendo cada vez mais tratada na literatura e bons resultados  são obtidos. Há uma grande variedade de meta-heurísticas desenvolvidas, algumas baseiam se em fenômenos da natureza, como o algoritmo genético, e outras não. Algumas trabalham  com apenas uma solução e outras com um conjunto de soluções, onde essas soluções evoluem  com as iterações dos algoritmos.  
Neste trabalho a meta-heurística BD será utilizada em dois problemas diferentes, um  com variáveis discretas e outro com variáveis contínuas e discretas, sendo o problema clássico da ciência da computação, o caixeiro viajante e o problema da área de engenharia elétrica  fluxo de potência ótimo, respectivamente. 
O objetivo deste trabalho, é contribuir com a literatura apresentando os passos da  BD para se trabalhar com variáveis de diferentes naturezas. 
1.1 Problema do Caixeiro Viajante (PCV) 
O problema do caixeiro viajante (PCV), também conhecido como TSP (The travelling  salesman problem), é um dos mais tradicionais problemas do ramo da Pesquisa Operacional.  Consiste basicamente em um conjunto de cidades, e todas estas cidades devem ser visitadas  por um agente viajante. Partindo-se de uma cidade de origem, este agente viajante deve  visitar todas as outras cidades uma única vez e voltar à cidade de origem, considerando que o  tour percorrido por este agente deve ter a menor distância possível. 
Este problema é considerado muito importante porque está relacionado com  modelos matemáticos de outros problemas importantes, e, geralmente é muito difícil de  encontrar a solução ótima quando a instância do problema é muito grande, ou seja, quando  o número de cidades é muito grande.  
Existem na literatura diversas formulações matemáticas para resolver o problema, e  podem ser categorizadas como problemas de Programação Linear Inteira (PLI) ou 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Programação Linear Inteira Mista (PLIM). Nos trabalhos de Gavish e (1978) e Orman e Williams  (2007) são apresentadas diversas formulações para o problema. 
Há também na literatura muitos trabalhos que tratam o problema como um  problema de otimização combinatorial sem considerar a formulação matemática, utilizando  heurísticas e meta-heurísticas (BENEVIDES, 2011). 
1.2 Problema de Fluxo de Potência Ótimo (FPO) 
O problema de FPO, é um problema clássico da engenharia elétrica, e, que consiste  basicamente em otimizar uma ou mais funções objetivo que definirão a melhor estratégia de  operação de um sistema de energia elétrica, assegurando o atendimento das restrições  operacionais e físicas de todo o sistema (CARPENTIER, 1962), (CARPENTIER, 1979).  
Diferentes problemas o FPO pode ser modelado para resolver, dentre eles podem ser  citados: Minimização dos custos de geração energia; das perdas nas linhas de transmissão; da  emissão de poluição na geração; do número de ações de controle; da injeção de potência  reativa; do corte de carga; dentre outros. 
Dependendo do objetivo a ser alcançado, a modelagem matemática dos problemas  de FPO na maioria das vezes apresenta um problema de programação não linear inteira mista  (PNLIM), o que torna o problema de difícil solução. Na literatura, há basicamente três  categorias de metodologias para resolver esse problema de otimização: metodologias  clássicas de otimização, que resolvem o problema utilizando métodos matemáticas clássicos  (SUN et al., 1984), (GRANVILLE, 1994), (HUA WEI et al., 1998), (TORRES; QUINTANA, 1998),  (POTLURI; HEDMAN, 2012), (KHANABADI; GHASEMI; DOOSTIZADEH, 2013), (LOW, 2014);  metodologias estocásticas, também chamadas de não determinísticas, que se utilizam de  métodos heurísticos e meta-heurísticas para resolver o problema; e as metodologias híbridas,  que integram os métodos clássicos de otimização com as meta-heurísticas (IBA, 1994),  (YURYEVICH; KIT PO WONG, 1999), (BAKIRTZIS et al., 2002), (LEE; VLACHOGIANNIS, 2005),  (CAPITANESCU; WEHENKEL, 2014), (SURENDER REDDY; BIJWE, 2016), (MOHAMED et al.,  2017), (JIANG et al., 2017), (ATTIA; EL SEHIEMY; HASANIEN, 2018), (SALKUTI, 2018). 
Este problema é caracterizado como um problema de programação não linear inteira mista (PNLIM), uma vez que na função objetivo, as restrições do balanço de potência ativa e  reativa do sistema, de acordo com a lei das correntes de Kirchhoff, e as expressões dos fluxos  de potência ativa e reativa são não lineares. Além disso, as variáveis de controle dos taps dos  transformadores são inteiras e as variáveis de chaveamento do shunt são binárias. As expressões (1)–(17) representam a modelagem matemática do problema. 
min �� = ∑ [������(������)2+ ������������ + ������] ��∈Ω�� 
sujeito a:
(US$/h)(1) 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
������ − ������ − ∑ �������� 
�������� 
������∈Ω�� 
������ − ������ − ∑ �������� 
�������� 
������∈Ω�� 
���� 
− ∑ �������� ������∈Ω�� 
���� 
− ∑ �������� ������∈Ω�� 
− ����2������ℎ = 0 ∀�� ∈ Ω��(2) + ����2������ℎ���� = 0 ∀�� ∈ Ω��(3) 
% �������� 
���� = ���������� [�������� (1 +�������� 
2 
����2 
�������� 
���������� ) 
% �������� 
− (1 +�������� 
���������� ) ��������(�������� cos(���� − ���� + ��������) + �������� sen(���� − ���� + ��������))] 
(4) 
�������� = ���������� [������������2 
�������� 
% �������� 
− (1 +�������� 
���������� ) �������� (�������� cos(���� − ���� + ��������) − ��������sen(���� − ���� + ��������))] 
(5) 
% �������� 
��ℎ��) (1 +�������� 
���� = ���������� [−(�������� + �������� 
2 
����2 
�������� 
% �������� 
+ (1 +�������� 
���������� ) 
(6) 
���������� ) �������� (�������� cos(���� − ���� + ��������) 
− ��������sen(���� − ���� + ��������))] 
�������� = ���������� [−(�������� + �������� 
�������� 
��ℎ��)����2 
% �������� 
+ (1 +�������� 
���������� ) �������� (�������� cos(���� − ���� + ��������) + ��������sen(���� − ���� + ��������))] 
∀������ ∈ Ω�� 
(7) 
�� ≤ ���� ≤ �� ∀�� ∈ Ω��(8) ������ ≤ ������ ≤ ������∀�� ∈ Ω��(9) ������ ≤ ������ ≤ ������∀�� ∈ Ω��(10) 
���� )2+ (�������� 
2 ∀������ 
(�������� 
���� )2≤ �������� 
∈ Ω��(11) 
��������)2+ (�������� 
2 ∀������ 
(�������� 
��������)2≤ �������� 
∈ Ω��(12) 
−���������� ≤ �������� ≤ ���������� ∀������ 
(13)
∈ Ω�� 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
����∗ = 0 (14) ���� ∈ {0,1} ∀�� ∈ Ω�� (15) 
���������� ∈ {0,1} ∀������ 
(16) 
∈ Ω�� 
�������� ∈ ℤ ∀������ 
(17) 
∈ Ω�� 
Nesse modelo, os conjuntos são: 
• Ω�� : Conjunto de barras do sistema, indexado pelo índice ��, sendo que ��∗ é a  barra de referência; 
• Ω�� : Conjunto de barras geradoras, indexado pelo índice ��; • Ω��: Conjunto de linhas, indexado pelo índice ������ que representa a linha ou  transformador �� no ramo ����, sendo que �� é utilizado para representar  componentes em paralelo em um mesmo ramo ����. 
Os parâmetros são: 
• ������, ������, e ������: Coeficientes de custo de geração quadrático, linear e constante,  respectivamente, na barra ��; 
• ������: Potência ativa demandada na barra ��; 
• ������: Potência reativa demandada na barra ��; 
• ������ℎe ������ℎ: Condutância e susceptância shunt conectadas à barra ��; • �������� e �������� : Condutância e susceptância série da linha �� no ramo ����; ��ℎ��: Susceptância shunt da linha ������; 
• �������� 
% : Passo de regulação para o tap do transformador �� no ramo ����; 
• �������� 
• ���������� : Número de taps do transformador �� no ramo ����; 
• �������� : Limite de fluxo de potência aparente da linha �� no ramo ����; • �� : Limite mínimo magnitude de tensão; 
• �� : Limite máximo magnitude de tensão; 
• ������: Limite mínimo de geração de potência ativa na barra ��; • ������: Limite máximo de geração de potência ativa na barra ��; • ������: Limite mínimo de geração de potência reativa na barra ��; • ������: Limite máximo de geração de potência reativa na barra ��. As variáveis contínuas são: 
• ������: Potência ativa gerada na barra ��; 
• ������: Potência reativa gerada na barra ��; 
• ����: Magnitude de tensão na barra ��; 
• ����: Ângulo de tensão na barra ��; 
• �������� : Ângulo de defasagem do transformador defasador �� no ramo ����. E as variáveis discretas são: 
• ����: Variável binária de chaveamento do shunt conectado à barra ��; • �������� : Posição do tap do transformador �� no ramo ����;
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
• ���������� :Variável binária que determina se a linha �� no ramo ���� está ligada ou  não. Neste caso o valor de todas essas variáveis estará configurado para 1, ou  seja, considera-se neste trabalho que todas as linhas de transmissão estejam  operantes. 
No modelo matemático apresentado, a equação (1) representa a função de custo de  geração, as equações (2) e (3) representam os balanços de potência ativa e reativa do sistema,  de acordo com a lei das correntes de Kirchhoff. Já as equações (4)–(7) representam os cálculos  dos fluxos de potência ativa e reativa nas linhas, em conformidade à lei das tensões de  Kirchhoff para cada laço fundamental. As expressões (8), (9) e (10) representam os limites de  tensão e geração de potência ativa e reativa, respectivamente. Os limites de capacidade das  linhas de transmissão são impostos pelas expressões (11) e (12). Por fim, a expressão (13) denota os limites das posições dos taps dos transformadores e a expressão (14) impõe que o  ângulo de tensão na barra de referência (slack) deve ser zero. As restrições (15)–(17) indicam  a natureza discreta das variáveis de operação relacionadas com os compensadores shunt,  estado de operação das linhas e posição dos taps nos transformadores (GARCIA, 2019). 
1.3 Meta-heurística Busca Dispersa (BD) 
O algoritmo de busca dispersa (BD) é uma meta-heurística da característica  evolucionária, que trabalha com população de soluções e não se baseia em fenômenos da  natureza. Proposto por Glover (1977), tem sido frequentemente utilizado em problemas de  otimização. O método utiliza estratégias de intensificação e diversificação de busca,  mostrando ser eficiente nos mais diversos problemas de otimização (LAGUNA; MARTÍ, 2003).  Na Figura 1 o algoritmo BD é apresentado em fluxograma do algoritmo.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
  
Figura 1. Fluxograma da meta-heurística BD 
  
  
  
  
  
  
  
  
  
  
 
Fonte: (GARCIA, 2019) 
Como pode ser observado na Figura 1, o algoritmo inicia com o carregamento dos  parâmetros do problema a ser otimizado e a definição dos parâmetros gerais da meta heurística, como seguem:  
• ����������: Número de elementos do conjunto �� de soluções 
• �� = ��1 + ��2 : Número de elementos do conjunto de referência ������������ • ��1: Número de elementos de qualidade do conjunto ������������ 
• ��2: Número de elementos de diversidade do conjunto ������������ 
1.3.1 Construção do Conjunto P 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
O tamanho padrão do conjunto �� é considerado como o máximo entre 100 e 5��. A  construção deste conjunto deve levar em conta a diversidade e qualidade das soluções e para  isso é utilizada a técnica de randomização controlada utilizando memória baseada em  frequência, como é detalhado em (LAGUNA; MARTÍ, 2003), (GARCIA, 2019) e (GARCIA;  MACEDO; ROMERO, 2018). 
1.3.2 Construção do Conjunto RefSet Inicial 
A construção do conjunto ������������ inicial consiste em inserir em ������������ os ��1 elementos de �� de melhor qualidade e os ��2 elementos de �� mais diversos em relação aos  elementos já alocados no conjunto ������������. De acordo com (LAGUNA; MARTÍ, 2003),  inicialmente inicia-se �� = 10, com ��1 = 5 e ��2 = 5, em seguida, por realização de testes, os  parâmetros ��1 e ��2 devem ser ajustados para melhor atender o problema. 
Para obter os ��2 elementos com diversidade, é utilizada a distância euclidiana entre  os elementos já constantes do conjunto ������������ e os elementos do conjunto P. Dessa forma,  para cada elemento constante no conjunto ��, exceto os já constantes em ������������, é  encontrada a menor distância euclidiana entre os elementos constantes no conjunto ������������.  Seleciona-se o elemento de �� que possuir a maior distância entre as mínimas (LAGUNA;  MARTÍ, 2003) , (GARCIA, 2019) e (GARCIA; MACEDO; ROMERO, 2018). 
1.3.3 Construção do Conjunto Pool 
O conjunto �������� é composto por combinações entre os elementos do conjunto  ������������. Como pode ser visto em (LAGUNA; MARTÍ, 2003), existem várias técnicas de  combinação entre soluções para popular ��������. Neste trabalho será utilizada uma combinação  matemática simples de 2 a 2 elementos de ������������ (GARCIA, 2019) e (GARCIA; MACEDO;  ROMERO, 2018). O processo consiste em selecionar elementos de ������������ e gerar  subconjuntos ��, e a partir dos subconjuntos ��, realiza-se as combinações para popular o  conjunto ��������, como é exemplificado na Figura 2. 
Após a construção de cada conjunto, ��, ������������ e ��������, os elementos são ordenados  da solução de melhor para a solução de pior qualidade. 
1.3.4 Atualização do Conjunto RefSet 
Após concluir a montagem do conjunto ��������, o conjunto ������������ é atualizado com  as �� melhores soluções da união dos dois conjuntos �������� ∪ ������������.  
Se o conjunto ������������ sofre alteração, reordena-se o conjunto da solução de melhor  qualidade para a de pior, um novo conjunto �������� é construído, e o processo entra num  looping, como pode ser observado na Figura 1.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Caso contrário, se não houve atualização de ������������, e os critérios de parada não são  satisfeitos, o conjunto �� é reconstruído, os elementos de diversidade de ������������ são  substituídos, e o processo novamente entra em looping (Figura 1). 
Ao término da execução do algoritmo, a solução ótima se encontra no primeiro  elemento de ������������. 
Figura 2. Exemplo da formação dos subconjuntos S e Pool 
  
Fonte: (GARCIA, 2019) 
2 SOLUÇÃO DO PROBLEMA DO CAIXEIRO VIAJANTE PELA META-HEURÍSTICA  BUSCA DISPERSA 
Nesta Seção serão detalhadas as particularidades do algoritmo da meta-heurística  busca dispersa, apresentado na Figura 1, para a solução do problema do caixeiro viajante, o qual foi implementado na linguagem C/C++.  
O problema é tratado como um problema de otimização combinatorial e não serão  utilizados modelos matemáticos. A Figura 3 mostra um exemplo de vetor como proposta de  solução para o problema do caixeiro viajante fornecido pela meta-heurística. 
Figura 3. Vetor proposta de solução para o problema do caixeiro viajante 
5 
	10 
	1 
	4 
	2 
	3 
	6 
	7 
	8 
	9
	



Fonte: Elaboração do autor.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Neste vetor exemplo (Figura 3) é ilustrada uma solução de uma instância do problema  com dez cidades, numeradas de 1 a 10. Observa-se que a cidade de partida é a de número 5,  em seguida a de número 10 e assim por diante. A última cidade a ser visitada é a de número  9, e como se sabe que após a última cidade visitada o caixeiro viajante volta para a cidade de  origem, no caso a cidade 5, não há a necessidade de armazená-la. 
As instâncias dos problemas estão armazenadas em arquivos do tipo texto, onde cada  linha do arquivo contém três colunas, sendo a primeira o número da cidade, a segunda a  coordenada geográfica �� e a terceira a coordenada geográfica �� da cidade. As distâncias entre  as cidades são calculadas com base na distância euclidiana, como mostra a expressão (18), e  neste exemplo é calculada a distância entre as cidades 1 e 2. 
��12 = √(��1 − ��2)2 + (��1 − ��2)2 (18) 
Para facilitar a construção do algoritmo e também para obter um melhor  desempenho na consulta das distâncias entre as cidades, na etapa inicial do algoritmo o  arquivo texto contendo a instância do problema é lido e todas as distancias entre todas as  cidades são armazenadas em uma matriz simétrica, onde um elemento desta matriz, por  exemplo ��[3,2], contém a distância entre a cidade 3 e 2. Considera-se neste trabalho  instâncias simétricas do problema do caixeiro viajante, ou seja, a distância entre as cidades 3  e 2 é igual à distância entre as cidades 2 e 3, e sendo assim, ��[3,2] = ��[2,3]. 
O conjunto P inicial é obtido utilizando dois algoritmos, um algoritmo guloso com  base na menor distância entre as cidades e o outro com base na randomização controlada  com memória baseada em frequência. 
Considerando �� o número de cidades da instância do problema, o algoritmo guloso  irá gerar o número �� soluções de �� para �� <= ����������. A solução 1 de �� iniciará o tour da  cidade 1, a solução 2 de �� iniciará o tour da cidade 2, e assim por diante.  
Quando �� for menor que ����������, as demais soluções ���������� − �� serão geradas com  o algoritmo que utiliza a randomização controlada com memória baseada em frequência para  obter elemento a elemento de cada solução. Para isto, as cidades são consideradas como  números contínuos, e após obter um elemento da solução, este valor contínuo é arredondado  para ser um número inteiro e logo em seguida, é feita uma verificação de duplicidade de  cidade na solução. Se houver duplicidade, este elemento da solução é descartado e um outro  elemento com base na menor distância da cidade anterior é obtido.  
A construção do conjunto �� após a primeira iteração, utiliza-se apenas a  randomização controlada com memória baseada em frequência, descrito anteriormente. Nesta implementação foi considerado ���������� = 100, e para o conjunto ������������ foi  utilizada a configuração �� = 10, sendo ��1 = 1 e ��2 = 9. 
A parcela dos elementos do conjunto ������������ responsáveis pela diversidade são  obtidos da mesma forma apresentada na seção de BD anterior, o que é padrão da meta heurística busca dispersa. Neste caso, as cidades são consideradas como números contínuos  para obter as distâncias euclidianas.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Para gerar as soluções do conjunto ��������, também são realizadas combinações de  dois a dois elementos de ������������ (conjunto �� (��′ e ��′′)), gerando-se assim três soluções testes  (trial), conforme exemplificado na Figura 2.  
A expressão (19) é utilizada para realizar a combinação das variáveis entre as soluções  ��′ e ��′′. 
���� da combinação 1 = ����′ − round(������) 
���� da combinação 2 = ����′ + round(������) 
���� da combinação 3 = ����′′ + round(������) 
�������� �� = 1, 2, … �� 
Em que: 
• r : Número aleatório entre 0 e 1; 
• ����′: i-ésima cidade da solução ��′ do subconjunto ��; • ����′′ : i-ésima cidade da solução ��′′ do subconjunto ��; • ������ = ������′′−����′ 
2: Corresponde a um incremento da variável ����; 
• �� : Número de cidades da instância do problema. 
(19) 
Após obter o valor de ���� de cada combinação, este número é arredondado para um  número inteiro, o limite entre 1 e �� é ajustado, e em seguida é verificada a duplicidade de  cidades no respectivo vetor solução. Caso haja duplicidade, esta cidade é descartada e uma  nova cidade é obtida com base na menor distância da cidade anterior da solução. 
3 SOLUÇÃO DO PROBLEMA DO FLUXO DE POTÊNCIA ÓTIMO PELA META HEURÍSTICA BUSCA DISPERSA 
Nessa seção é apresentada a metodologia utilizando a meta-heurística BD para  resolver o problema de FPO. A implementação foi feita utilizando a linguagem de  programação C/C++ (GARCIA, 2019). 
A formulação matemática utilizada para o problema de FPO é a mesma apresentada  nas expressões (1)–(17), ou seja, será considerada a otimização no custo de produção de  energia elétrica. 
As incógnitas do problema de FPO que a metodologia soluciona são apresentadas na  ��������,  
����, �������� 
Tabela 1. Além disso, são calculados os fluxos de potência, ou seja, as variáveis �������� �������� do problema, definidas respectivamente pelas expressões (4)–(7). 
���� e �������� 
�������� 
A construção do conjunto �� nesse caso utiliza a mesma metodologia apresentada na  Seção 1.3, ou seja, utilizando randomização controlada com memória baseada em frequência  para as variáveis contínuas. Já os valores das variáveis ���� e ����são obtidos de maneira 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
totalmente aleatória. Nesse trabalho foi considerado ���������� = 100. Para o conjunto ������������ foi utilizada a configuração �� = 10, sendo ��1 = 2 e ��2 = 8. 
Tabela 1 – Variáveis do problema do FPO calculadas pela metodologia BD-FPO 
Descrição 
	Magnitude de tensão na barra �� 
	Potência ativa gerada na barra �� 
	Potência reativa gerada na barra �� 
	Ângulo de tensão na barra �� 
	Variável binária de chaveamento do shunt �� 
	Posição do tap do transformador ��, entre –16 e 16 
	



Variável Tipo ���� Contínua ������Contínua ������Contínua ���� Contínua ���� Binária ����2 Inteira Fonte: (GARCIA, 2019). 
Os elementos de diversidade do conjunto ������������ são obtidos agora considerando as  variáveis binárias e inteiras. A distância euclidiana entre os elementos de ������������ e os  elementos de �� é calculada utilizando (20). 
�� = √∑(����′ − ����′′)2 ��∈Ω�� 
+ √∑(����′ − ����′′)2 ��∈Ω�� 
���������� 
+ √∑(������′− ������′′)2 ��∈Ω�� 
����ℎ�������� 
+ 
(20) 
√∑(������′− ������′′)2 
��∈Ω�� 
Em que: 
+ √ ∑ (����′ − ����′′)2 ��=1 
+ √ ∑ |����′ − ����′′| ��=1 
• Ω�� : Conjunto de barras do sistema; 
• Ω�� : Conjunto de barras geradoras; 
• ����′: Módulo de tensão na barra �� da solução presente no conjunto ��; • ����′′ : Módulo de tensão na barra �� da solução presente no conjunto ������������; • ������′: Potência ativa gerada na barra �� da solução presente no conjunto ��; • ������′′: Potência ativa gerada na barra �� da solução presente no conjunto ������������; • ����′: Posição do tap no transformador �� da solução presente no conjunto ��; • ����′′ : Posição do tap no transformador �� da solução presente no conjunto ������������; • ����′: Valor binário do shunt �� da solução presente no conjunto ��; • ����′′ : Valor binário do shunt �� da solução presente no conjunto ������������; • ���������� : Número de taps dos transformadores; 
• ����ℎ�������� : Número de shunts no sistema. 
2 Considera-se que as variáveis referentes ao ajuste dos taps dos transformadores estão organizadas em um vetor  indexado pelo índice ��.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Para cada elemento constante no conjunto ��, é encontrada a menor distância  euclidiana (20) entre os elementos constantes no conjunto ������������. Seleciona-se o elemento  de �� que possuir a maior distância entre as mínimas. 
Os subconjuntos �� são constituídos de elementos de ������������, os quais são  combinados e as novas soluções geradas são armazenadas em ��������. A combinação aqui  também é realizada utilizando combinação de dois a dois elementos de �� (��′ e ��′′), gerando se assim três soluções testes que são incluídas em ��������. As expressões (21)–(23) ilustram essa  combinação para as variáveis contínuas e inteiras do problema. 
Combinação das variáveis contínuas de magnitude de tensão: 
���� da combinação 1 = ����′ − ������ 
���� da combinação 2 = ����′ + ������ 
(21) 
���� da combinação 2 = ����′′ + ������ 
∀�� ∈ Ω�� 
Combinação das variáveis contínuas dos ângulos de tensão: 
���� da combinação 1 = ����′ − ������ 
���� da combinação 2 = ����′ + ������ 
(22) 
���� da combinação 3 = ����′′ + ������ 
∀�� ∈ Ω�� 
Combinação das variáveis inteiras que definem a posição dos taps: 
���� da combinação 1 = ����′ − round(������) 
���� da combinação 2 = ����′ + round(������) 
(23) 
���� da combinação 3 = ����′′ + round(������) 
�������� �� = 1, 2, … ���������� 
Em que: 
• ������ = ������′′−����′ 
2: Corresponde a um incremento da variável “����”, que pode ser ����,  ���� ou ����; 
• �� : Número aleatório entre 0 e 1; 
• ����′: Módulo de tensão na barra �� da solução ��′do subconjunto ��; • ����′′ : Módulo de tensão na barra �� da solução ��′′do subconjunto ��; • ����′: Ângulo de tensão na barra �� da solução ��′do subconjunto ��; • ����′′ : Módulo de tensão na barra �� da solução ��′′do subconjunto ��; 
• ������′: Potência ativa gerada na barra �� da solução ��′do subconjunto ��; • ������′′: Potência ativa gerada na barra �� da solução ��′′do subconjunto ��; • ����′: Posição do tap do transformador �� da solução ��′do subconjunto ��; • ����′′ : Posição do tap do transformador �� da solução ��′′do subconjunto ��; • Ω�� : Conjunto de barras de geração; 
• Ω��′: Conjunto de barras de geração exceto a barra de referência; • ���������� : Número de posições dos taps dos transformadores.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Caso algum valor de ����fique abaixo do limite inferior da variável na respectiva  barra/ramo, o limite inferior é assumido, e caso fique acima do limite superior, o limite  superior é assumido. Após obter três soluções testes, as soluções são incorporadas ao  conjunto ��������. 
A técnica utilizada para calcular a parcela de combinação das variáveis binárias das  soluções é através do cálculo de um valor, chamado aqui de ���������� para cada variável binária,  com base no valor da função objetivo de cada solução a ser combinada (LAGUNA; MARTÍ,  2003) e (GARCIA, 2019). 
O cálculo desse valor ���������� é demonstrado na expressão (24). 
������������ =����������1 × ����′ + ����������2 × ����′′ 
����������1 + ����������2, �������� �� = 1, 2, . . , ����ℎ�������� (24) 
Em que: 
• ����������1 : Valor da função objetivo da solução ��′; 
• ����������2 : Valor da função objetivo da solução ��′′; 
• ����′: Valor do i-ésimo shunt (0 ou 1) da solução ��′; 
• ����′′ : Valor do i-ésimo shunt (0 ou 1) da solução ��′′; 
• ����ℎ�������� : Número de Shunts do sistema. 
O valor dos shunts de cada uma das soluções trial teste é determinado de acordo com  a expressão (25): 
���� = {1, ���� �� ≤ ����������(��) 
(25) 
Em que: 
0, ���� �� > ����������(��) �������� �� = 1, 2, . . . , ����ℎ�������� 
• �� : Valor aleatório entre 0 e 1; 
• ����: Valor do i-ésimo shunt de cada solução trial; 
A atualização do conjunto ������������ é idêntica à maneira utilizada na otimização de  funções multimodais restritas, ou seja, após concluir a montagem do conjunto ��������, o  conjunto ������������ é atualizado com as �� melhores soluções da união dos dois conjuntos �������� ∪ ������������. 
Um método de melhoria local é utilizado após a inclusão dos elementos de  diversidade no conjunto ������������, e é aplicada a todos seus elementos. O algoritmo simplex de  Nelder-Mead é utilizado nas variáveis de magnitude e ângulo de tensão em todas as barras (GARCIA, 2019). Para as variáveis que representam a posição dos taps dos transformadores, é  aplicado o método com base na sensibilidade da função objetivo. Aumenta-se em uma  unidade o valor de um tap e se a função objetivo melhorar continua-se aumentando enquanto  a melhoria continuar, até o valor máximo. Caso o valor da função objetivo não melhore  aumentando, faz-se o contrário, diminui-se em uma unidade o valor de um tap e enquanto a  melhoria continuar, continua-se diminuindo, até o valor mínimo. Isso é realizado para todos  os ramos com transformadores.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Já no caso dos shunts, o valor binário é trocado de 0 para 1 ou de 1 para 0 e o valor  da função objetivo é avaliado. Caso haja melhoria da função objetivo, mantém-se a troca, e  caso não, o valor original é assumido. Isso é realizado para todos os shunts do sistema. 
As variáveis referentes à potência ativa e potência reativa nas barras geradoras são  obtidas no cálculo da função objetivo, mais precisamente no cálculo das restrições do sistema  referentes ao balanço de potência ativa e reativa. 
Com base nas leis de Kirchhoff, expressões (2) e (3), as seguintes igualdades têm que  ser verdadeiras para que haja o balanço de potência. 
������ = ������ + ∑ �������� 
�������� 
������∈Ω�� 
������ = ������ + ∑ �������� 
���� 
+ ∑ �������� ������∈Ω�� 
+ ����2������ℎ∀�� ∈ Ω��(26) 
�������� 
������∈Ω�� 
+ ∑ ���������� ������∈Ω�� 
− ����2������ℎ���� ∀�� ∈ Ω��(27) 
Nas barras de carga, ������e ������assumem o valor zero. Já nas barras de geração são  verificados os limites das variáveis ������e ������. Caso o termo à direita da igualdade das  expressões (26) e (27) fiquem fora dos limites das respectivas variáveis ������e ������, são  assumidos os limites inferior ou superior, dependendo do caso. Caso o termo à direita da  igualdade fique dentro dos limites das respectivas variáveis, esse valor é assumido. 
A função objetivo dessa abordagem é penalizada com as restrições de acordo com  (28) como pode ser visto em Garcia (2019). 
(28) 
Em que: 
�� 
min ���� = �� +∑����|ℎ��|�� ��=1 
�� 
+ ∑����(max{0, ����})�� ��=1 
• �� : Corresponde ao valor da função objetivo, expressão (1); 
• ���� : Valor da função objetivo penalizada; 
• ����: Coeficiente de penalização para a i-ésima restrição de igualdade; • ����: Coeficiente de penalização para a i-ésima restrição de desigualdade; • �� : Expoente de penalização, sendo �� = 1; 
• ℎ��: Restrições de igualdade correspondentes às leis de Kirchhoff, das  expressões (2) e (3); 
• ����: Restrições de desigualdade, correspondentes aos limites de fluxo de  potência aparente nas linhas de transmissão, das expressões (11) e (12); • �� : Número de restrições de igualdade; 
• �� : Número de restrições de desigualdade. 
Nesse caso optou-se em utilizar o expoente de penalização �� = 1 para explorar  melhor os valores de violação das restrições entre zero e um. Com a realização dos testes foi 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
possível observar que com um coeficiente de penalização maior para as restrições de  desigualdade, o algoritmo teve um comportamento melhor. 
Utilizou-se também coeficientes de penalização distintos para as restrições de  igualdades (����) e desigualdades (����). Isso porque, também com a realização dos testes,  verificou-se que escolhendo coeficientes de penalização maiores para restrições com valores  maiores e coeficientes menores para restrições com valores menores, o método conseguia  convergência mais rápida para uma solução factível. 
Os limites das variáveis (i) posição dos taps, (ii) magnitudes e (iii) ângulos de tensão  foram gerenciados na meta-heurística, ou seja, na etapa da construção do conjunto ��, e na  etapa de combinação das soluções para a geração do conjunto ��������. 
4 RESULTADOS E DISCUSSÕES  
Nesta Seção são apresentados os testes e resultados dos dois problemas tratados  neste trabalho. Primeiramente serão apresentados os resultados do problema do caixeiro  viajante e em seguida os resultados do problema de fluxo de potência ótimo. 
4.1 Caixeiro Viajante 
Foram utilizadas duas instâncias do problema de caixeiro viajante para avaliar o  potencial da meta-heurística implementada. Uma instância contendo 75 cidades e a outra  com 150 cidades. Com a finalidade de comparação de resultados, estas mesmas instâncias  foram resolvidas através da modelagem matemática tradicional do problema utilizando o  solver CPLEX. O algoritmo BD foi implementado na linguagem C/C++ e a execução do algoritmo  foi realizada em um microcomputador com processador Intel® Core™ i5-7400 de 3,00 GHz e  8 GB de RAM 
A Tabela 2 mostra os resultados das funções objetivo da resolução do problema com  75 e 150 cidades pelo CPLEX e pela busca dispersa. Além disso, os tempos gasto para a solução  dos problemas também são mostrados. Como pode ser observado, os valores das funções  objetivos de ambas as instâncias do problema, praticamente são os mesmos entre o CPLEX e  a BD. Entretanto, a metodologia que utiliza a BD apresentou melhor desempenho em relação  ao tempo gasto para a solução dos problemas. 
Tabela 2 - Resultados dos testes do problema do caixeiro viajante
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
CPLEX 
	BUSCA DISPERSA
	Função Objetivo (km) 
	Tempo (seg.) 
	Função Objetivo (km) 
	156,37 
240,10 
	75 
1048 
	157,54 
241,57 
	



Instância Tempo (seg.) 75 cidades 0,62 150 cidades 204,51 
Fonte: Elaboração do autor. 
Considerando que, para instâncias maiores o CPLEX pode não convergir, ou demorar  muito tempo para a convergência da solução, a metodologia que utiliza a BD pode ser uma  alternativa viável para a solução deste tipo de problema. 
4.1 Fluxo de Potência Ótimo 
Os resultados da solução do problema de FPO pela BD são apresentados nesta seção.  O algoritmo foi implementado na linguagem C/C++ e a execução do algoritmo foi realizada em  um microcomputador com processador Intel® Core™ i5-7400 de 3,00 GHz e 8 GB de RAM (GARCIA, 2019). 
São utilizados três sistemas teste, de 6, 14 e 57 barras, disponíveis em Coffrin, Gordon  e Scott (2016). A Tabela 3 e A fim de comparar os resultados, esses mesmos sistemas foram  resolvidos com o solver KNITRO, o qual utiliza o método de pontos interiores, considerando a  modelagem matemática do problema de FPO apresentada neste trabalho. A implementação  utilizou a linguagem AMPL. 
Tabela 4 mostram algumas características desses sistemas. 
Tabela 3 – Características gerais dos sistemas teste utilizados pela BD-FPO – Parte 1 
Nº de  
Barras
	Nº de  
Linhas
	Barras de  Geração
	Barras de  
Carga
	Nº de  
Transformadores
	6 
	11 
	3 
	3 
	1 
	14 
	20 
	5 
	9 
	3 
	57 
	80 
	7 
	50 
	17 
	



Sistema Nº de  Shunts 
nesta_case6_ww 0 nesta_case14_ieee 1 nesta_case57_ieee 3 Fonte: (GARCIA, 2019) 
A fim de comparar os resultados, esses mesmos sistemas foram resolvidos com o  solver KNITRO, o qual utiliza o método de pontos interiores, considerando a modelagem  matemática do problema de FPO apresentada neste trabalho. A implementação utilizou a  linguagem AMPL. 
Tabela 4 – Características gerais dos sistemas teste utilizados pela BD-FPO – Parte 2 
Carga  
Ativa 
	Carga  
Reativa Total  (MVAr)
	Capacidade de  
Geração Ativa  
(MW)
	



Sistema Capacidade de  Geração Reativa  
(MVAr)
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023.
Total  
(MW)
	

	

	210,000 
	210,500 
	530,000 
	259,000 
	73,500 
	425,000 
	1250,800 
	336,400 
	1377,000 
	



nesta_case6_ww 300,000 nesta_case14_ieee 130,000 nesta_case57_ieee 611,000 Fonte: (GARCIA, 2019) 
A Tabela 5 mostra os valores das funções objetivos em (US$/hora) obtidos a partir  das soluções do problema de FPO para os três sistemas teste utilizando a BD e o solver KNITRO. 
Tabela 5 – Comparação das funções objetivo referentes aos resultados da solução do problema de  FPO por AMPL+KNITRO e BD 
Sistema 
nesta_case6_ww nesta_case14_ieee nesta_case57_ieee 
AMPL+KNITRO 
	BD
	

	Função Objetivo  
(US$/hora) 
	Factibilidade
	Função Objetivo  
(US$/hora) 
	Factibilidade
	3127,5704 
243,9903 
1173,0094 
	Factível 
Factível 
Factível 
	3137,0032 
207,4335 
993,5857 
	Factível 
Infactível 
Infactível
	



Fonte: (GARCIA, 2019) 
Como pode ser observado na Tabela 5, a BD não conseguiu soluções factíveis para o  problema em dois casos, nos sistemas de 14 e 57 barras, e o modelo utilizando o solver conseguiu soluções factíveis para os três casos. A infactibilidade se deu pelo balanço de  potência nas barras, sendo que todos os outros limites, incluindo os limites de fluxo de  potência aparente nas linhas de transmissão foram respeitados.  
5 CONCLUSÃO  
Com a realização deste trabalho, conclui-se que a meta-heurística busca dispersa é  uma técnica de otimização promissora e que pode ser aplicada em problemas de qualquer  natureza. 
A BD especializada para resolver o problema do caixeiro viajante mostrou ser uma  ferramenta robusta e eficiente, pois em comparação com os resultados obtidos do solver CPLEX, o qual utilizou a formulação matemática do problema, a BD apresentou resultados de  funções objetivo muito próximos e com um tempo computacional muito menor. 
Embora a implementação da BD para a solução do problema de FPO não conseguiu  soluções factíveis em dois problemas teste, considera-se um passo dado na resolução deste  tipo de problema utilizando esta meta-heurística, uma vez que por ser um problema de PNLIM  é de difícil solução, e, ainda um desafio na área de engenharia elétrica. Em trabalhos futuros,  pode-se utilizar solvers em conjunto com esta implementação para chegar a soluções factíveis de boa qualidade.
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Por fim, conclui-se que o objetivo do trabalho foi alcançado, pois apresentou duas  metodologias de implementação da BD para a resolução de problemas de qualquer natureza. 
REFERÊNCIAS  
ATTIA, A.-F.; EL SEHIEMY, R. A.; HASANIEN, H. M. Optimal power flow solution in power  systems using a novel Sine-Cosine algorithm. International Journal of Electrical Power &  Energy Systems, London, v. 99, p. 331–343, jul. 2018.  
BAKIRTZIS, A. G.; BISKAS, P. N.; ZOUMAS, C. E.; PETRIDIS, V. Optimal power flow by enhanced  genetic algorithm. IEEE Transactions on Power Systems, Piscataway, v. 17, n. 2, p. 229–236,  mai. 2002.  
BENEVIDES, P. Aplicação de heurísticas e metaheurísticas para o problema do caixeiro  viajante em um problema real de roterização de veículos. 2011. Universidade Federal do  Paraná, [s. l.], 2011. Disponível em:  
<http://dspace.c3sl.ufpr.br:8080/dspace/handle/1884/26793> 
CAPITANESCU, F.; WEHENKEL, L. An AC OPF-based heuristic algorithm for optimal  transmission switching. In: 2014 POWER SYSTEMS COMPUTATION CONFERENCE 2014,  Wroclaw. Anais... Wroclaw: IEEE,ago. 2014. Disponível em:  
<http://ieeexplore.ieee.org/document/7038445/> 
CARPENTIER, J. Contribution a l’etude du dispatching economique. Bulletin de la Societe  Francaise des Electriciens, London, v. 3, n. 1, p. 431–447, ago. 1962.  
CARPENTIER, J. Optimal power flows. International Journal of Electrical Power & Energy  Systems, [s. l.], v. 1, n. 1, p. 3–15, 1979.  
COFFRIN, C.; GORDON, D.; SCOTT, P. NESTA, The NICTA Energy System Test Case Archive.  arXiv preprint, Ithaca, p. 1–26, ago. 2016.  
GARCIA, A. M. Algoritmo de Busca Dispersa aplicado ao problema de Fluxo de Potência  Ótimo considerando o Desligamento de Linhas de Transmissão. 2019. Universidade  Estadual Paulista - Ilha Solteira, [s. l.], 2019. 
GARCIA, A. M.; MACEDO, L. H.; ROMERO, R. Algoritmo de busca dispersa para otimização de  funções contínuas multimodais com restrições. L SBPO – Simpósio Brasileiro de Pesquisa  Operacional, Rio de Janeiro, ago. 2018.  
GAVISH, B. . G. S. C. Travelling Salesman Problem and Related Problems. The Office of Naval  Research, [s. l.], v. 1, n. 1, p. 32, 1978.  
GLOVER, F. Heuristics for integer programming using surrogate constraints. Decision  Sciences, Hoboken, v. 8, n. 1, p. 156–166, jan. 1977.  
GRANVILLE, S. Optimal reative dispach through interior point methods. IEEE Transactions on  Power Systems, Piscataway, v. 9, n. 4, p. 136–146, fev. 1994.  
HUA WEI; SASAKI, H.; KUBOKAWA, J.; YOKOYAMA, R. An interior point nonlinear  programming for optimal power flow problems with a novel data structure. IEEE  Transactions on Power Systems, Piscataway, v. 13, n. 3, p. 870–877, ago. 1998.  
IBA, K. Reactive power optimization by genetic algorithm. IEEE Transactions on Power 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023. 
Systems, Piscataway, v. 9, n. 2, p. 685–692, mai. 1994.  
JIANG, J.; HAN, X.; WANG, J.; ZHU, X.; SUN, D.; MA, Y. Optimal power flow with transmission  switching for power system with wind/photovoltaic generation. In: 2017 CHINESE  AUTOMATION CONGRESS (CAC) 2017, Jinan. Anais... Jinan: IEEE,out. 2017. Disponível em:  <http://ieeexplore.ieee.org/document/8243820/> 
KHANABADI, M.; GHASEMI, H.; DOOSTIZADEH, M. Optimal transmission switching  considering voltage security and N-1 contingency analysis. IEEE Transactions on Power  Systems, Piscataway, v. 28, n. 1, p. 542–550, fev. 2013.  
LAGUNA, M.; MARTÍ, R. Scatter Search:Methodology and Implementations in C. New York:  Springer Science, 2003.  
LEE, K. Y.; VLACHOGIANNIS, J. G. Optimization of power systems based on ant colony system  algorithms: An overview. In: PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON,  INTELLIGENT SYSTEMS APPLICATION TO POWER SYSTEMS 2005, Arlington. Anais... Arlington:  IEEE,nov. 2005. Disponível em: <http://ieeexplore.ieee.org/document/1599237/> 
LOW, S. H. Convex Relaxation of Optimal Power Flow—Part I: Formulations and Equivalence.  IEEE Transactions on Control of Network Systems, [s. l.], v. 1, n. 1, p. 15–27, 2014.  
MOHAMED, A.-A. A.; MOHAMED, Y. S.; EL-GAAFARY, A. A. M.; HEMEIDA, A. M. Optimal  power flow using moth swarm algorithm. Electric Power Systems Research, Amsterdam, v.  142, p. 190–206, jan. 2017.  
ORMAN, A. J.; WILLIAMS, H. P. A Survey of Different Integer Programming Formulations of  the Travelling Salesman Problem. Power International, [s. l.], n. 1991, p. 93–104, 2007.  
POTLURI, T.; HEDMAN, K. W. Impacts of topology control on the ACOPF. In: 2012 IEEE  POWER AND ENERGY SOCIETY GENERAL MEETING 2012, San Diego. Anais... San Diego:  IEEE,jul. 2012. Disponível em: <http://ieeexplore.ieee.org/document/6345676/> 
SALKUTI, S. R. Congestion management using optimal transmission switching. IEEE Systems  Journal, Piscataway, v. 12, n. 4, p. 3555–3564, dez. 2018.  
SUN, D.; ASHLEY, B.; BREWER, B.; HUGHES, A.; TINNEY, W. Optimal power flow by newton  approach. IEEE Transactions on Power Apparatus and Systems, Piscataway, v. PAS-103, n.  10, p. 2864–2880, out. 1984.  
SURENDER REDDY, S.; BIJWE, P. R. Efficiency improvements in meta-heuristic algorithms to  solve the optimal power flow problem. International Journal of Electrical Power & Energy  Systems, London, v. 82, p. 288–302, nov. 2016.  
TORRES, G.; QUINTANA, V. An interior-point method for nonlinear optimal power flow using  voltage rectangular coordinates. IEEE Transactions on Power Systems, Piscataway, v. 13, n.  4, p. 1211–1218, nov. 1998.  
YURYEVICH, J.; KIT PO WONG. Evolutionary programming based optimal power flow  algorithm. IEEE Transactions on Power Systems, Piscataway, v. 14, n. 4, p. 1245–1250, nov.  1999. 
REVISTA CIENTÍFICA SEMANA ACADÊMICA. FORTALEZA-CE. EDIÇÃO 238. V.11. ANO 2023.