Contents lists available at ScienceDirect
 Egyptian Informatics Journal
 journal homepage: www.sciencedirect.com
 Enhancing security in social computing systems through knowledge 
learning techniques
 Anitha Rajesh
 a
 , Ramamurthy DineshKumar
 b
 , Saranya Shanmugam
 Sathishkumar Veerappampalayam Easwaramoorthy
 a
 e
 c
 , Jaehyuk Cho
 d,*
 ,  
Department of Electronics & Communication Engineering, B. S. Abdur Rahman Crescent Institute of Science and Technology, Vandalur, Chennai, India
 b
 c
 d
 e
 Department of Electronics and Communication Engineering, Peri Institute of Technology, Tambaram, Mannivakkam, Chennai, India
 Department of Electronics & Communication Engineering, Kongunadu College Of Engineering And Technology, Thottiam, Trichy, India
 Department of Software Engineering, Jeonbuk National University, Jeonju-si, Republic of Korea
 Department of Computing and Information Systems, Sunway University, 47500 Petaling Jaya, Selangor Darul Ehsan, Malaysia
 ARTICLE INFO
 ABSTRACT
 Keywords:
 Digital signature
 Interaction authentication
 Knowledge learning
 Light weight security
 Social computing systems
 Social computing systems (SCS) integrate social behaviour with computational hardware to enable conversations 
among technologies and individuals. To protect the integrity of behavioural integration from illegal device 
communications, it is essential to ensure that security is maintained inside SCS. This study aims to provide a 
Coherent Authorization and Authentication Technique (CA2T) specifically designed to ensure the safety of SCS 
connections. CA2T uses various user credentials to approve interactions while guaranteeing that authentication 
is not replicated. Computed and behavioural data authentications are separated through knowledge-based 
learning to reduce the amount of security overheads. Credential verification that is adaptable and based on 
different calculation needs is the initial step in the device authorization process. After that, end-to-end 
authentication uses a lightweight signature based on two factors for verifying interactions between devices. 
The experimental findings show that when compared to the leading baseline approach, NTSC, CA2T reduces false 
positives by 9.48 %, computational overhead by 12.28 %, authentication time by 11.38 %, and failure rates by 
11.48 %. With these improvements CA2T has emerged as much more effective than previous security frameworks 
for protecting SCS environments; it remains scalable, has minimal latency, and can adapt to new environments.
 1. Introduction
 In information and communication technology (ICT), the term social 
computing system is mainly used. A social computing system connects 
more people by intersecting ICT and social activities for better 
communication via the Internet. The main aim of a social computing 
system is to design a proper digital system that helps users get all the 
information about social activities in day-to-day life [1]. Social 
computing is the next level of the web, containing social and business 
information. A social computing system is one of the popular systems on 
theInternet today. Social computing systems face many problems, such 
as security and privacy issues. Personal details of the users are in danger 
due to some of the attackers. Traditional social computing systems do 
not address the threats [2]—threats such as inappropriate administrator, 
identity theft, inadequate security, designed invasion, etc. CampusWiki 
is a security management process that helps reduce privacy-related 
* Corresponding author.
 E-mail address: chojh@jbnu.ac.kr (J. Cho). 
https://doi.org/10.1016/j.eij.2025.100675
 threats and address them before they lead to severe danger. The ac
cess control system includes a user interface for privacy preferences. 
Security management is mainly proposed to prevent security violence 
and compensate for the consequences of the attacks. Wavelet Neural 
Network (WNN) is a computational neural network method used to 
address security-related threats and prevent information about the user 
from attackers [3,4].
 A social computing system is a form of information and computa
tional technology (ICT) used for communication. Social computing 
systems help connect social activities and computational communica
tion systems based on the technologies. It helps to maintain a modern 
connection between the user and the network [5]. Some social 
computing system applicationsare blogs, wikis, social network services, 
etc. Authentication and authorization are critical tasks in social 
computing systems, which address users’ privacy and security issues. 
Lack of authorization and authentication leads to severeproblems in 
Received 12 November 2024; Received in revised form 18 March 2025; Accepted 2 April 2025  
Available online 11 April 2025 
1110-8665/© 2025 THE AUTHORS. Published by Elsevier BV on behalf of Faculty of Computers and Arti cia Intelligence, Cairo University. This is an open access 
article under the CC BY-NC-ND license ( http://creativecommons.org/licenses/by-nc-nd/4.0/ ). 
A. Rajesh et al.                                                                                                                                                                                                                                  
Egyptian Informatics Journal 30 (2025) 100675 
social computing systems [6]. Community Authorization Service (CAS) 
is an authorization methodto track user membership via an access 
control system in computer networking technology. It helps to keep 
track of the users for the authorization process. The CAS scheme is 
secure and efficient during the authorization changes done by the user 
[7]. The combined authentication scheme encapsulation (CASE) method 
is used in the authentication process of social computing systems. CASE 
is a combination of traditional authentication methods and biometric 
authentication methods for effective visual representation of the user. 
CASE is a more effective authentication method that improves the user’s 
privacy [8].
 Technology outsourcing is only one example of how social 
computing can function with user relationships and networks to tackle 
tasks. On the other hand, SCS moves sensitive user data away from data 
centres and onto the network edge. By exploiting the weakness of edge 
nodes, attackers can more easily steal users’ privacy in this scenario. 
Internet infrastructure as a whole relies on cooperative edge networks. 
Sensors can collect network data and send it to IoT services using sat
ellites, Wi-Fi, long-term evolution (LTE), and WiMAX.
 Using an intrusion detection system in IoTs is vital to guarantee SCS 
security. Protecting users’ privacy and avoiding jumped-up attacks are 
two of the main goals of intrusion detection systems. Several recent 
works have employed deep learning algorithms to improve the accuracy 
of intrusion detection. Use edge network traffic, for example, to train 
convolutional neural networks for intrusion detection. With the help of 
the auto-encoder (AE), we can lower the data dimensionality and 
implement intrusion detection using the deep learning-based AE-Alex 
Net. Training massive data sets in a SCS environment using deep 
learning algorithms will improve computer efficiency and latency. 
Although there has been a lot of progress in intrusion detection tech
nology, the algorithms used to ensure the safety of SCS systems are still 
in their early stages.
 CA2T uses multiple authentication methods to verify user identities 
and prevent impersonation. Minimize security expenses and improve 
authorization efficiency using CA2T’s knowledge-driven learning-based 
separation of calculated and behavioural data verification. The CA2T 
method still has to show significant improvements over the current se
curity approaches, even though it incorporates knowledge-based 
learning, lightweight signatures, and diverse user credentials in a 
novel way. To guarantee it substantially improves upon current strate
gies, it must evaluate its creativity and efficacy thoroughly, even though 
it solves security difficulties in SCS. It isn’t easy to store, manage, and 
secure the massive amounts of data produced by billions of linked de
vices [9]. The foundation for sharing data in an atmosphere of confi
dence is security, which includes features like availability, privacy, 
secrecy, authorization, and authentication. Verifying the legitimacy of 
an entity is known as authentication [10]. Only users who have 
completed the authorization process can access the resources. By 
enforcing specific measures, users can guard their data from unautho
rized access. Authentication and authorization lead to data secrecy. It 
safeguards against the recovery and misuse of sensitive information. If 
an IoT device is always available, it is secure and resistant to threats. 
Data integrity is ensured by information security during transmission, 
storage, and retrieval [11].
 On the other hand, SCS moves sensitive user data away from data 
centres and onto the network edge. By exploiting the weakness of nodes, 
attackers can more easily steal users’ privacy in this scenario. Protecting 
users’ privacy and avoiding jumped-up attacks are two of the main goals 
of intrusion detection systems [12]. Several recent works have employed 
deep learning algorithms to improve the accuracy of intrusion detection. 
One example is the study that trains convolutional neural networks to 
identify intrusions using data collected from edge network traffic. To 
augment anomalous data, it employs a generative adversarial network. 
Using AE-AlexNet, a deep learning-based auto-encoder, achieves intru
sion detection by reducing the data dimensionality [13]. Training 
massive data sets in a SCS setting using the CA2T method will improve 
computer efficiency and latency. CA2T employs robust encryption 
measures for all stored or sent data to protect sensitive information from 
unauthorized access. It uses role-based access control (RBAC) to restrict 
access to essential assets and minimize insider risks by guaranteeing that 
users may only access resources related to their responsibilities. Using 
multi-factor authentication and frequent session management, the sys
tem’s authentication mechanisms resist phishing and impersonation 
attempts. This reduces the danger of unauthorized access via replay 
attacks or session hijacking. To take security a notch further, CA2T uses 
continuous knowledge learning methods in its authorization procedures 
to dynamically change access rights according to user behaviour pat
terns. By integrating these approaches, CA2T safeguards the system 
against internal and external threats, guaranteeing data availability, 
confidentiality, and integrity.
 As Social Computing Systems (SCS) expand, edge computing, IoT 
devices, and decentralised user interactions make security more diffi
cult. Since they use static credential verification and established security 
criteria, current authentication frameworks fail to protect sensitive data 
from ever-changing cyber threats including phishing, session hijacking, 
and unauthorised data access. These conventional methods’ high 
computational costs make real-time authentication inefficient, espe
cially in densely populated locations. Knowledge-driven Coherent 
Authorisation and Authentication Technique (CA2T) adapts authenti
cation protocols to user behaviour and real-time risk assessment. 
Context-aware solutions address these issues. CA2T offers a lightweight 
signature-based authentication mechanism for optimal processing 
throughput without compromising security. Multi-factor credential 
validation reduces false positives and illegal access by integrating 
behavioural and computational authentication. This makes CA2T a 
resource-efficient, adaptive, and scalable solution for modern SCS set
tings. Future enhancements may include federated learning for privacy- 
preserving authentication, blockchain for decentralised trust manage
ment, and AI-driven adaptive security for cyber threats. CA2T prepares 
Social Computing Systems for smart, self-optimizing security frame
works by considering them.
 1.1. Main contributions
 • Designing a Coherent Authorization and Authentication Technique 
(CA2T) for authenticating and authorizing social computing systems 
(SCS).
 • The CA2T system uses various user credentials to approve in
teractions and ensure that authentication is not repeated. Separating 
computed and behavioural data authentications using knowledge- 
based learning helps to decrease security overheads.
 • A lower amount of false positives is achieved for many different 
computer instances and social behaviour models by using knowledge 
learning to assess the authenticity level among interactions.
 • The proposed technique is evaluated using metrics like computa
tional overhead, authentication time, and failure rates.
 The rest of the paper is prearranged as follows: Section 2 deliberates 
the related works, Section 3 proposes the CA2T model, Section 4 dis
cusses the results and discussion and Section 5 concludes the research 
paper.
 2. Related works
 With a view towards improving efficiency, privacy, and security, the 
Related Works section delves into a variety of authorization and 
authentication approaches relevant to Social Computing Systems (SCS). 
Group authentication, privacy-preserving encryption, multi-factor 
authentication, and blockchain-based security frameworks are some of 
the important issues covered in this review.
 2 
A. Rajesh et al.                                                                                                                                                                                                                                  
Egyptian Informatics Journal 30 (2025) 100675 
2.1. Privacy-preserving techniques
 Fang et al. [13] proposed a novel group authentication method for 
decentralized edge collaboration, utilizing historical collaboration pro
cess information. Identifying more devices in collaboration requires 
high communication, processing, and storage overhead for existing de
vice authentication methods. This work offers a new Group Authenti
cation (GA) mechanism for decentralized edge collaboration using 
historic collaborative process data, such as distributed learning param
eters and prior collaboration results. Two strategies are developed: 
random token generation (R-TG) and privacy-preserving token genera
tion (PP-TG). A GA protocol is proposed, where devices authenticate 
each other using their tokens. The lightweight, flexible solution operates 
on a standardized security protocol, protecting collaboration continu
ously. Simulation results show the scheme’s viability and superior per
formance to benchmark schemes. The main negative is that the article 
reduces overhead, which may limit scalability in large networks.
 Using cryptographic accumulators, Zuo et al. [14] invented a 
privacy-preserving verification graph for social networks. The proposed 
framework is more reliable and helps preserve unauthorized people’s 
privacy-related data. Both user authentication and owner graph privacy 
are protected by using the proposed scheme.
 Zhang et al. [15] have proposed a Game-theoretic privacy-aware task 
allocation (G-PATA) scheme. This article aims to improve the allocation 
of compute tasks in SSEC systems while considering the users’ person
alized privacy preferences; this is known as a security-aware task allo
cation problem. For this purpose, it presents a new framework for G- 
PATA, which stands for game-theoretic privacy-aware task allocation, 
on evaluating G-PATA compared to two state-of-the-art task allocation 
algorithms using two practical social sensing applications. This 
approach improved application latency reduction by 47 % and end de
vice payoffs by 15 % compared to baselines, demonstrating that G-PATA 
substantially outperforms existing approaches across a range of privacy 
parameters. Extremely dynamic network conditions may cause the 
method’s performance to decline.
 Al-Muhtadi et al. [16] proposed a cyber-security framework used in 
computing environments to overcome cyber threats using context- 
awareness schemes. Symmetric key encryption is used here to 
leverage the data. The ubiquitous computing infrastructure and IoT 
devices are susceptible to many threats due to their dynamic operation 
and the necessity for handling private and confidential information. The 
proposed framework helps to maintain the context and improves the 
authentication process in social networks. Access control and assigning 
roles are implemented with the help of the cloud environment in the 
user layer.
 2.2. Multi-factor authentication and authorization methods
 Hossain et al. [17] invented a two-factor identity-concealed 
authentication scheme (ICAS) in a remote-sensing system to provide a 
secure authentication process. On the other hand, existing multi-factor 
authorization techniques fail to adequately address privacy concerns 
in certain use cases due to the leaking of randomization and identity 
concealing. ICAS is more secure and reliable for users and remote 
servers. The proposed scheme reduces the overall cost of computation.
 Alsahlani et al. [18] proposed a lightweight multi-factor authenti
cation and authorization scheme for IoT (LMAAS-IoT). Nevertheless, 
significant security risks are associated with collecting and exchanging 
sensitive information through public, unsecuredchannels. This scheme 
is used to ensure the authentication and authorization of the users. A 
fuzzy extractor algorithm is used to verify the biometric process. LMASS- 
IoT achieves better authentication with a low computation rate.
 Chenget al. [19] presented that crowdsensing, which collects sensi
tive data from many users, is crucial to digital city development. Since 
mobile devices used by many ordinary users are the fundamental 
sensing units, it is vital to integrate a range of connectivity ways to 
distribute sensing jobs and acquire sensor data. This sensitive material 
could be eavesdropped, intercepted, or disclosed, hurting individuals, 
businesses, and countries. Multiple communication mechanisms are 
needed for sensing and data collection to maintain privacy. This article 
explores crowd-sensing privacy protection, reviews existing technology 
and proposes research problems and future paths for enhancing it.
 2.3. IoT-based security frameworks
 Sheron et al. [20] displayed that the Internet of Things (IoT) has 
transformed communication by creating large-scale, open environments 
with sensor networks and independent nodes. Security is a significant 
issue. This paper presents a decentralized, scalable IoT security system 
using intelligent computing and tree-based hash for device and request 
authentication. The framework improves communication privacy and 
integrity by securing devices.
 Li et al. [21] have invented a novel trust-based service computing 
(NTSC) scheme for social networking. NTSC is used to ensure the 
trustworthiness of every networking process. Data sources are ensured 
through trustworthy factors. Trustworthiness is a main drawback for 
every social media; this scheme provides users better service and 
processes.
 Saad et al. [22] have proposed a hybrid secure equivalent computing 
model to identify the security threats in the computing environment to 
overcome edge privacy issues. This scheme is used to provide better 
stability and security for the users. Service feature is used as a parallel 
security while computing. The annealing method is used for both the 
critical sharing and revocation process.
 To ensure the security of the application which uses the Internet of 
Things (IoT), Vishwakarma et al. [23] have proposed secure commu
nication and authentication by using the blockchain method (SCAB- 
IoTA). The IoT allows autonomous device communication. This auton
omy makes the IoT network vulnerable to security threats. This auton
omy necessitates dependable safety and storage for identification for 
exchanging data across IoT devices. This scheme is used to authenticate 
andcommunicate better between the users and owners. SCAB-IoTA 
scheme reduces the computation process rate.
 2.4. Blockchain based security frameworks
 To address the mobile edge privacy and security issues, Zhao et al. 
[24] have proposed a privacy-preserving for poisoning (P3) scheme, 
which helps to overcome the poisoning attacks in social media. The P3 
scheme improves edge computing systems’ security and privacy issues 
and avoids unauthorized authentication against poisoning attacks. 
Additionally, MEC has unique characteristics, such as job offloading and 
time-delay sensitivity, making the work inapplicable.
 Secure Internet of Vehicles (IoV) connections are suggested by 
Manogaran et al. [25] as using token-based authorization and authen
tication (TAA). The recommended approach uses random forest learning 
for authorization and handling keys for authentication, with blockchain 
technology as the foundation for both. This system limits token flips and 
key update features for smooth information sharing. Data’s error-free 
classification 
is 
needed 
for 
authentication 
to 
avoid 
overheadblockchain-based permission, which allows token field updates 
to maintain the communication ratio by reducing vehicle-to-vehicle 
losses. Experimental simulations will evaluate the suggested method’s 
performance on the covered metrics, changing the vehicle density, error 
rate, and classification sets. In contrast to the other two approaches, ours 
has poor detection accuracy regarding the new low-flow attacks, such as 
WebDDoS and Brute Force-XSS.
 Puthiyidam et al. [26] suggest enhancing the Elliptic Curve Digital 
Signature Algorithm (ECDSA), a non-interactive zero-knowledge proof 
authentication mechanism based on elliptic curve encryption. Despite 
its widespread use in IoT environments, the client authentication 
capability of the standard MQTT protocol is lacking. To prevent 
3 
signature reuse, the suggested approach, T-ECDSA, encrypts and de
crypts the signature using a timestamp-based key, which is only valid for 
a brief period. Instead of using a separate dedicated computer for 
authentication, the MQTT broker incorporates the T-ECDSA. The 
experimental results show that T-ECDSA outperforms the traditional 
ECDSA regarding security time and execution complexity.
 Social Computing Systems (SCS) security frameworks include device 
authentication, privacy-preserving methods, and AI/blockchain models, 
each experiencing limitations. Replay attacks are possible with static 
credential validation-based device authentication mechanisms like CAS 
and CASE. Privacy-preserving methods improve security but are 
inflexible, leaving systems vulnerable to insider attacks. AI and block
chain models increase security yet have considerable processing over
head, restricting real-time performance. CA2T’s dynamic credential 
verification, lightweight two-factor authentication, and knowledge- 
driven risk assessment address these gaps. CA2T is scalable, adaptable, 
and low-latency SCS security because it modifies authentication levels in 
real time, reduces false positives, and enhances computing performance.
 3. System methodology
 By combining multi-factor authentication, credential verification, 
and behavioural analysis, the Coherent Authorisation and Authentica
tion Technique (CA2T) technique is used within Social Computing 
Systems (SCS) to improve security. To guarantee secure interactions, the 
approach operates on the cloud and uses device and end-to-end verifi
cation mechanisms for authentication. Numerical data comprises ele
ments like computing overhead, authentication time, false rates, and 
failure rates; non-numerical data includes issues like user behavioural 
patterns, credential authentication, and anomaly detection in access 
requests. CA2T analyses both types of data. To enhance security while 
reducing computing cost, CA2T uses knowledge-based learning to 
continually change authentication levels depending on risk factors and 
past user behaviour. It does this by correlating numerical and non- 
numerical data. Efficient authentication with less false positives and 
no compromise to the system is achieved with this adaptive technique.
 3.1. Coherent authorization and authentication technique for SCS
 CA2T is introduced to reduce false rates of malware practices in 
social computing systems analysis based on device authentication and 
end-to-end authentication input using knowledge-based learning. The 
inputs are obtained from the humans (i.e.) the activities observed 
through digital signature. Social computing system security is the pri
mary goal of the proposed Coherent Authorisation and Authentication 
Technique (CA2T), which uses knowledge learning methods. The first 
step of the process is to examine how users interact with the social 
computing platform. Examples of these actions include requests for ac
cess, data transfers, and user behaviour patterns. CA2T prioritizes a 
context-aware, dynamic authorization procedure above using irrelevant 
notions such as digital signatures or viruses. This method continually 
monitors and evaluates user behaviour in real-time. The user’s activities 
and surrounding data, including their location, device use, and access 
history, serve as inputs to the system. To identify any risks, these inputs 
are evaluated by machine learning algorithms that look for irregularities 
or suspicious access patterns. By basing authorization choices on user 
roles, trust levels, and contextual information, device-to-device or 
machine-to-machine interactions may be protected using attribute- 
based and role-based access control techniques. The knowledge- 
learning component of CA2T allows for dynamic adjustments to access 
permissions by gradually refining the system’s authorization criteria in 
response to observed behaviours. This flexible method improves safety 
while causing the fewest possible problems for actual users. Instead of 
relying on ineffective or antiquated security mechanisms like digital 
signatures or virus detection, CA2T offers a strong and personalized 
defence mechanism for social computing platforms by analyzing user 
behaviour and contextual data. The digital signature is a way to secure 
social behaviour and computational machines through device-to-device 
or machine interactions. This model aims to reduce false rates in social 
behaviourmodelling and computing instances. The challenging task is 
the authentication of behaviour data and the computation using 
authorization techniquesto prevent security overheads. The behaviour 
data are stored as records for the previously identified instances. Fig. 1
 represents the process of CA2T for SCS.
 As illustrated in Fig. 1, the information accumulated from the social 
environment is authenticated using digital signatures with credential 
management. The cloud computing environment serves as the platform 
for providing different user access/responses. The cloud security servers 
deliver permissions, authentication, and authorization to end-users. In 
this process, credentials and access are used to retain security. The ob
servations are classified as device authentication and end-to-end 
authentication. In device authentication, human activity is said to be 
device authentication activity, such as login, sign-in, and authorization 
validation, which is similar concerning time and failures. Instead, the 
service will authenticate directly to the receiver in an end-to-end 
authentication activity such as password verification from the receiver 
side. In this case, the receiver has some credentials for authorization, in 
which the sequence is observed as not being the same at the consecutive 
time. An authentication and authorization activity reduces the chances 
of malware practices by causing failures. The failures are observed as 
instances of misbehaviour of activity or computational activity. The 
proposed activity relies on diverse user credentials for authorizing in
teractions. It ensures non-replicating interaction authentication using 
knowledge-based learning as different cloud computing architectures 
and services are unavailable, as well as the metrics, computational 
overhead, authentication time, and failures. However, to retain the 
CA2T of the end-users, the proposed activity provides fewer false rates in 
computing devices and social behaviourmodelling.
 The Coherent Authentication and Authentication Technique (CA2T) 
architecture, shown in Fig. 1, provides a systematic authorisation and 
verification mechanism to guarantee secure interactions inside Social 
Computing Systems (SCS). User authentication and credential verifica
tion is one of the system’s separate parts; it collects and compares user 
credentials, such as digital signatures and login requests, with recorded 
behavioural data. After that, the system uses knowledge-based learning 
to detect abnormalities and dynamically alter access levels during 
permission and behavioural analysis. The next step in implementing 
end-to-end authentication and secure communication is to protect 
transactions and prevent unauthorised access by using a two-factor 
lightweight signature mechanism. Lastly, monitoring authentication 
logs, access requests, and risk factors constantly allows adaptive security 
measures, which is ensured by cloud security management and risk 
mitigation. In SCS environments, CA2T improves computing perfor
mance, reduces security concerns, and eliminates false positives by 
combining these processes.
 Problem Definition: Let {a,b,⋯,n}∈Z represents the set of requests 
processed in an authentication time αt∈(td te)where td and te are the 
authentication times for access and response, respectively. For different 
authentication time processing Z, the false rates F will ensure non- 
replicating interaction authentication that is given by Eq. (1). 
∀(td te),argmin
 ∑t
 n=1
 (Z W)n
 , t∈[td+i, te]
 argmin
 ∑W
 n=i
 (td)n
 ∀{a,b,⋯,n}∈Zsuchthatte≤t≤td
 ⎫
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎬
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎭
 (1) 
In the above Eq. (1), suchthatW
 Z
 =maximuminany(td te)the variable 
W denotes the access response, and (Z W) in the false rate in any 
t∈[td+i,te]. This decreases false rates in interaction authentication time 
and reduces malware practices under SCS.
 As per the following, the issue is noticed using the authentication and 
A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
4 
authorization of the credential management through knowledge 
learning. Therefore, the few cases based on te and t that is derived as 
follows: 
(1) ∀n∈Z in [td,te], if (n+i) is true in t∈[td+i,te], then (n+i)
 observing an additional response of behaviourmodelling (t+td+
 i)where t represents the false rates.
 ∀n∈Z in td, if t=te (or) t>te, then θ=(Z W) is maximum and 
W
 Z→0.
 ∀n∈Z in td, if t=te (or) t<te, then θ=(Z W)is minimum and 
W
 Z→i.
 In case (2), the variable θ represents the false rates in different 
computing instances. The first case represents the integrity authentica
tion of the (td te)where the next n that is (n+i)co-exist with any 
t∈[td+i,te] of n. This increases the response for both n and (n+i). 
Similarly, the second case (2) identifies the false rates in (td te)
 computing instances and also proves if it is in conflict with the flexible 
credential W performed argmin∑W
 n=i(td)n∀(td te)is satisfied.
 3.2. Proposed technique
 As presented in Fig. 1, the CA2T operates between the resources and 
end-user applications connected using the cloud computing platform. 
The access and response are the states of the application service. The 
longevity (βL)of a service depends on the user’s interaction authenti
cation time. Hence, the fewer false rates in different social computing 
instances respond to the computing factor for βL. Hence based on the 
cases (1) and (2), the βL is estimated as 
βL=(td te)+(td+i t)∀te≤t≤td (2) 
The longevity of the credential management must conflict with the 
authentication time and false rates such that the t∈[td+i,te]∀(n+i). It 
does not provide proper interaction authentication over the knowledge 
learning t∈[td,te]∀n∈Z. The following analysis βL does not prevent 
security overheads of the user credentials. The access and response of 
the end user application can provide some security to the applications, 
turning the position to the subsequent credential management Z that 
defines (Z W) is the following sequence of the behaviourmodelling 
and achieves W
 Z
 →i. Both the authentication and authorization techniques 
rely on βL and [td,te]. In this manner, they are observed by θ of the 
previous response of the service. Authentication is used to secure social 
computing systems and avoid malware practices in SCS. The case (1) and 
(2) are sequentially analyzed and observed for both the longevity and 
response time of the end user and applications using knowledge 
learning. This instance of learning is used to find the case-controlling 
solution where flexible credential verification is done through 
different computation requirements.
 A practical and safe authentication procedure for SCSs is the primary 
goal of the CA2T technique. Ca2T guarantees strong device authoriza
tion by using adaptive identity verification, dividing data into calculated 
and behavioural components, and leveraging knowledge-based 
learning. Dynamic modification of authentication levels aids in main
taining equilibrium between safety and efficiency, while the end-to-end 
authentication phase further secures interactions with its two-factor 
compact signature. Calculating computational overhead, validation 
time, and breakdown rates allows for a thorough evaluation of CA2T’s 
effectiveness, impact, and reliability.
 Credential verification, access processing, and adjustable credential 
management are how Algorithm 1 handles Device Authorization sce
narios. Thealgorithm 1manages device authorization in a methodical 
way, making sure that credentials are securely verified, that access re
quests are processed efficiently, and that credentials are managed 
adaptively. The first step is to confirm credentials by analyzing user 
interactions using behavioural models and credential verification. After 
then, in order to avoid duplication of authentication, flexible credential 
Fig. 1. CA2T for SCS.
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
5 
authentication is used to compare access requests with previously 
established security rules. In the third step, the system verifies the user’s 
validity using digital signatures. In the event that authentication is un
successful, the procedure proceeds to the failure management step, 
when further security measures can be requested or the user could be 
prompted to re-enter valid credentials. The last step, access authoriza
tion, allows for secure interaction when authentication is successful, 
which improves system security by decreasing false positives. 
1. The distinct behaviour model and calculation is the initial step in the 
service and access procedure. One possible way to divide it is by 
metrics, computational overhead, authentication time, and failures. 
This analysis’s instance may be processed sequentially depending on 
the applications’ credential verification.
 2. The following service uses flexible credential authentication to assist 
in correlating the time instances (te,td and te+i) for any response 
restrictions. The method of differentiation is knowledge-based 
learning.
 3. After observing the digital signature input, it verifies whether the 
user is legitimate before moving on to the next step.
 4. The process will end, and a message indicating that the password did 
not match will appear; please enter the proper password if the digital 
signature does not match.
 5. The process can proceed to the following step if the access finds an 
accurate password. Thus, this procedure lessens malware activity on 
the SCS and helps to secure user information.
 Credential verification can be classified into two types. First, the 
device authentication analysis verifies flexible credentials through 
different behaviour models and computation requirements. Second, the 
end-to-end authentication analysis is used to perform the two-factor 
lightweight signature method and hence is deployed for the 
credential-verified device interaction authentication. The following case 
discusses the device and end-to-end authentication based on credential 
verification using knowledge learning.
 Algorithm 1: Case 1: Device Authorization
 1 Input:Initialization
 2 Initialize resources W, Z
 3 Initialize time instances tdte, te+i
 4 Initialize longevity factor βL
 5 Output:Computed values
 6 Step2:Compute Longevity Factor βL
 7 For each n∈Zdo
 8 ift∈[td,te]then
 9 βL=max(t1
 d,t2
 d,...,tn
 d)
 10 elseift e≤t≤tdthen
 11 βL=(td te)+(td+i t)
 12 Step3:Device Authorization
 13 For each device D do
 14 Compute ε(W,te)using Eq. (3)
 15 Compute ε(Z,te+i)using Eq. (4)
 16 Authenticate te≤tandte≤t≤td conditions
 Compute authorization method δ for ε(Wte)andε(Z,te+i)using Eq. (5)
 17 If te≤t condition is satisfied, then
 18 Analyze resource flexibility
 19 Compute continuity γ(Z+j)/γ(W+j)using Eq. (6)
 20 Identify failures through t≤td+iandt≤td conditions
 21 Prevent security overhead increase for te∀(Z-n)
 22 Retain fewer false rates for t∈[td,te+i]
 Algorithm 1 handles Device Authorization situations with configurable 
credential management, access processing, and verification. Calculate 
service and access values, perform knowledge-based learning, authen
ticate conditions, compute authorization methods, analyze resource 
flexibility, longevity, failures, instances, credential verification, and 
minimize false rates. The pseudocode’s goals include flexible credential 
management, security, and low false rates. Secure and efficient 
credential management is achieved using mathematical equations, 
conditions, and parameters.
 Case (1) Device Authorization: This case deals with flexible 
credential management in access processing and credential verification 
of the response. The first process for service and access is the different 
behaviour models and computations. It can be split into metrics, 
computational overhead, authentication time and failures. This analysis 
can be processed sequentially based on the credential verification over 
the applications. First, the device of the D based on td is derived in Eq. 
(3). 
ε(W,te)←
 (
 i βL
 Z
 )W
 Z+(td te)
 (td+i)
 [
 argmin
 Z
 (te)j
 (te+i)j+1
 ]
 ∀j∈W (3) 
For the above service ε(W,te), the device authentication performs 
credential verification through the computing instances te+i such that 
ε(Z,te+i)← βL
 Z n+
 (te+i
 td
 )[
 (td+i te)j
 ]
 ∀j∈Z (4) 
The following service helps to correlate between the te,td and te+i for 
any limits of response by flexible credential authentication. The prime 
condition is the differentiation of resources and flexibility td. The dif
ferentiation is performed using knowledge-based learning. The segre
gated learning process proves the service ε(W,te) and ε(W,td) and 
ε(Z,te+i)is discussed in the following. The input of a digital signature is 
observed and will check whether the user is valid, and then it processes 
further procedure. If the digital signature is not matched, the access will 
stop the procedure and denote the password not being matched by 
entering the correct password. We can move on to the following process 
if the access finds an accurate password. So, this process helps secure 
user information and reduces malware practices on the SCS. Fig. 2
 presents the device authorization process.
 The authorization persists between the security server and the end
users. The computations rely on (Z,W)in different βL for sharing mul
tiple services in te and te+i instances. In the process, the θ validity is 
provided for validating different devices (authorization). This de
termines the device behaviour based on the stored knowledge, 
improving the classification. The knowledge learning is performed to 
authenticate te≤t and te≤t≤td conditions for preventing unwanted 
resources from being accessed by services. For the ε(Z,te+i)resource, 
the access processing credentials the given t and thus requiring βL. 
Therefore, this βL does not overlap with the available resources, so a new 
behaviour model is defined. Then, the new behaviour model is autho
rized and must satisfy te≤t to access additional responses. The case (1) 
for more βL as in the above Equation is analyzed using the knowledge 
learning of ε(Z,te+i). The flexibility of the resources is analyzed until 
te≤t condition is satisfied. The authorization method (δ)is computed 
for te≤t and t≤td conditions for ε(W,te)and ε(Z,te+i)as in Eq. (5). 
γ1=
 (
 i βL1
 1
 )
 +
 (td1
 te1
 )
 γ2=
 (
 i βL2
 2
 )
 +
 (td2
 te2
 ) (θ1
 Z
 )
 γ3=
 (
 i βL3
 3
 )
 +
 (td3
 te3
 ) (θ2
 Z
 )
 ⋮
 γW=
 (
 i βL3
 W
 )
 +
 (tdW
 teW
 ) (θW i
 Z
 )
 ⏟̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅⏞⏞̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅⏟
 forε(W,te)
 γ1=i+
 (td1 te1
 te+1
 )
 γ2=
 (
 i θ1
 1
 )
 +
 (td2 te2
 te+2
 )
 γ3=
 (
 i θ2
 2
 )
 +
 (td3 te3
 te+3
 )
 ⋮
 γZ=
 (
 i θZ i
 Z
 )
 +
 ( tdZ teZ
 te+Z+i 3
 )
 ⏟̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅⏞⏞̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅⏟
 forε(Z,te+i)
 ⎫
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎬
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎭
 (5) 
This Eq. (5)represents resources W and service flexibility Z in the 
A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
6 
following instances. Therefore, td=te+i and (td+Z+i t)= t. The final 
estimation of γZ that is if the (td+Z+i)is performing the authorization n 
where the security of θ is analyzed. This θ helps to identify the esti
mating case (2). The interaction authentication for ε(Z,te+i) is illus
trated. In this manner, knowledge-based learning is used to prevent 
security overheads through credential management t≤td, t≤td+i, and 
td<td+i. The behaviour model and computing instances determine the 
authentication levels of the different interactions. The metrics and 
computational overhead for above t≤td and t≤td+i conditions are 
estimated as a sequence of the following Equation. The continuity is 
computed as in Eq. (6). 
γZ+j
 γW+j
 =
 ∑ i
 n
 (
 i td
 te+j
 )
 +
 (
 βLW
 W n
 )
 (
 i θW
 Z
 )
 +
 (
 td+i te
 te+j
 )*
 ( tdZ teZ
 te+Z+i 3
 )
 /
 (
 i βL3
 W
 )
 +
 (tdW
 teW
 )
 (6) 
As per the above Equation, the γZ+j and γW+j represent the ε(W,te)
 and ε(Z,te+i) services, respectively. In this manner, longevity is 
analyzed if γW=γZ+j. Therefore, γW+j=γZ is estimated. The total 
number of services and responses processed in the previous condition 
delays the current resources by increasing the chances of queuing. 
Hence, the current responses are synchronously analyzed without 
missing the authentication time. The flexibility of resources can be 
maintained by the interaction authentication through the behaviour 
model. The previous access γ∀Z i(or)W j is determined, and the fail
ures identified through t≤td+i and t≤td conditions. This method is 
used to prevent the increase in security overhead te∀(Z n). (i.e.) the 
(Z n)∈γ(Z+i) is analyzed and authorized for the authentication to keep 
td≤t≤te satisfying γW and γZ in td≤t and t≤te+i failures. The 
unsatisfying conditions are followed by the n∈Z are the false rates in 
this model (td)and carried by compressing the case (2). In this case, (1) 
resourcing process, the earlier td or te+i instances are observed for γW=
 γZ(or) γW=γZ+i (or) γW+i=γZ such that γZ+i is also the same as γW+i. In 
the following instances, the failures of γZ+i observing t≤te+i are per
formed credential verification to the ε(Z,te+i) service, retaining ∑W
 n=i
 (td)n
 ∀d∈[td+i,te]and t∈[td,te]such that t∈[td,te+i]attains fewer 
false rates. Therefore, the interaction authentication failing n∈Z is 
pointed by verifying the case (2) described as follows.
 Case (2) End-to-End Authentication: In this case, the false rate 
occurrence is due to different computing instances and social behaviour 
modelling. The prolonged access delay and authentication time of (Z
 n) is analyzed. If the case is not pointed out correctly, it results in 
response failures, and therefore, the authorizing interaction is halted. 
The false rates are noticed in td+i authentication time to reduce the 
queuing time of the n∈Z. The pending access n that has not been stored 
with the end user service verified. This verification is an easy way to 
retain the behavioural integration due to unauthorized device commu
nications conditions discussed in the case of (1) device authentication. 
Pursued by this process, this authentication using a two-factor light
weight signature is deployed for the credential-verified device in
teractions as follows. 
βLW
 W n=
 ∑ w
 n=i
 (
 i θW
 Z
 )
 +
 (
 td+i te
 te+j
 )
 te+Z+i 3 (7a) 
Therefore, the two-factor lightweight signature method is observed. 
(i.e.) td<te+i and te≤t are observed to compute t=td and t>td is 
satisfied. Different interaction authentication from the previous case, 
the access of ε(Z,te+i)is along determined for the above two conditions 
as ε(W,te)achieved satisfied td≤t and td≤t≤te. Fig. 3presents the 
authentication process between the cloud and the access platform.
 Fig. 2.Device Authorization Process.
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
7 
The authentication phase covers the platform, server, and the end- 
users. The interacting phase is covered using authentication keys be
tween the platform and the server. Contrarily, behaviour-based autho
rization covers security requirements between the server and the end- 
users (Fig. 3). The computational overhead is measured in two secu
rity administrations to prevent false rates. The exceeding of computa
tional overhead in the longevity of the end user application access and 
hence case (1) conditions that fail θ are analyzed. The two-factor 
lightweight signature method for ε(Z,te+i)is accessed as two different 
cases discussed below.
 Algorithm 2: Case 2: End-to-End Authentication
 1 Input:Initialization
 2 Initialize resources W, Z
 3 Initialize time instances tdte, te+i
 4 Initialize longevity factor βL
 5 Output:Computed values
 6 Step1: End-to-End Authentication
 7 Compute βLW / (W-n) using Eq. (7a)
 8 Step2:td<te+i and Output t>td
 9 For each n ∈Z do
 10 Compute γ(Z n) and γ(Z n i)using Eqs. (7b) and (8)
 11 Verify t>td condition using a two-factor lightweight signature
 12 Step3:te≤t and Output t=te
 13 For each n∈Zdo
 14 Compute γ(Z n+i)using Eq. (9)
 15 Verify t=te condition
 16 Retain minimum θ(Z n+i) for Z =n
 17 Analyze verification time and authentication failures for different βL
 18 Analyze authentication success and overhead for different θ
 Algorithm 2 handles End-to-End Authentication false rate and security 
overhead. There are two sub-cases: Step 2: td<te+i and Output >td, 
and step 3:te≤t and Output t = te. The pseudocode evaluates verifi
cation time, authentication failures, and success for varying longevity 
factors β_L and θ. It seeks to provide end-to-end solid authentication 
while minimizing false rates and security overhead.
 Case 2a: Access =ε(Z,te+i); Condition: td<te+i; Output .= t>td
 Solution 1: The above access shows the failure of td<te+i where 
output t>td is yet achieved.
 This results in service failures of the available interaction authenti
cation and fewer false rates attained in the different authentication 
times. The advantage of a two-factor lightweight signature is that it is 
used to provide security over the device interactions between authen
tication and authorization n∈Z,andit helps to attain the above output. 
In this process, the first instances are picked up from the previous service 
of ε(W,te).
 The service responses are parallel for td<te+i and t>td. The 
number of digital signatures is unevenly shared. Therefore, 
(
 Z n
 j
 )
 at
tains the resource sharing between the instances. The response instances 
and the corresponding θ in both the interaction authentication are 
derived as in Eqs. (7b) and (8). 
γ1=
 [
 j
 (Z i
 Z
 )]
 +
 [ td1 te1+i
 td1
 ]
 ,θi=0
 γ2=
 [
 j
 (Z 2i
 Z
 )]
 +
 [ td2 te2+2i
 td2
 ]
 ,θ2i=j
 (Z n
 j
 )
 n2i
 Z
 ⋮
 γZ n=
 [
 j
 (n
 Z
 )]
 +
 [ tWZ n
 tnZ n
 +(Z n)
 tWZ n
 ]
 ,θZ n=j
 (n
 W
 ) (Z n
 Z
 )
 ⎫
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎬
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎭
 (7b) 
γ3=
 [
 i 2i
 Z
 ]
 +
 [ te+i
 td2
 ]
 ,θ3i=W Z i
 Z
 γ4=
 [
 i 3i
 Z
 ]
 +
 [ te+i
 td3
 ]
 ,θ4i=W Z 2i
 Z
 ⋮
 γZ n i=
 [
 i Z n n
 Z
 ]
 +
 [ te+i
 tWZ n
 ]
 ,θγZ n i
 =W Z n i
 Z
 ⎫
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎬
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎭
 (8) 
The two-factor lightweight signature method γZ n and Z n i ac
cess are used to identify the credential management over the different 
Fig. 3. Authentication Process.
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
8 
interactions of td<te+i. Thus t>td is the authentication for both γZ n 
and γZ n i. Hence, for both td<te and td+i<te+i, the result of t>td is 
verified. The overall θ attained here is W Z n i
 Z 
and j
 (
 n
 W
 ) (
 Z n
 Z
 )
 in 
both the (Z n) and (Z n i) instances of the interaction 
authentication.
 Case 2b: Access =ε(Z,te+i); condition: te≤t; Output: t= te.
 Solution 2: Compared to the previous case 2a, in this manner, the 
chances of false rates are high as the computation θ is a two-factor 
lightweight signature deployed. The condition is satisfied for (Z n)
 and (Z n i)for verifying security overheads and ensuring there are 
no false rates. Unlike the previous case 2a, the metrics and computa
tional overhead are performed for (Z n i) responses to attain 
maximum security overhead. The security overhead condition is verified 
based on interaction authentication analysis of γ for (Z n)and (Z n
 i)instances as in Eq. (9). 
γ2=
 [
 i max(Z 2i)
 Z
 ]
 =
 (td+2i
 te 2i
 )
 ,θ2i=0
 γ4=
 [
 i max(Z 4i)
 Z
 ]
 =
 (td+4i
 te 4i
 )
 ,θ4i=j
 (W n
 Z
 )
 ⋮
 γZ n+i=
 [
 i max(Z n+i)
 Z
 ]
 =
 (td+Z n+i
 te Z+n+i
 )
 ,θZ n+i=j
 (W Z+n i
 Z
 )
 ⎫
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎬
 ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎭
 (9) 
As per Eq. (9), the proposed technique relies on credential manage
ment performed where different interactions W are analyzed indepen
dently. In this case, td+i=te and td+i=t and therefore, the maximum 
condition of t≤te is satisfied. Hence, the minimum condition for 
achieving γZ n and γZ n i is θZ n+i is retained in 
(
 W Z+n i
 Z
 )
 and therefore, 
if Z=n, then the authentication time and shared responses processing 
from the end users. Fig. 4presents the analysis of verification time and 
authentication failure for different βL.
 An example of adaptive authentication in a social computing system 
(SCS) is shown below to help explain the Coherent Authorization and 
Authentication Technique (CA2T) (Algorithm 3).
 Algorithm 3:CA2T Authentication
 def authenticate_user(user_id, device_id, login_attempt):
 # Step 1: Retrieve stored credentials and behavioral data
 stored_credentials =get_user_credentials(user_id)
 behavior_data =analyze_behavior(user_id)
 # Step 2: Verify device authentication
 if not verify_device(device_id, user_id):
 return “Access Denied: Unrecognized Device”
 # Step 3: Perform knowledge-based authentication
 auth_score =compute_auth_score(user_id, login_attempt, behavior_data)
 if auth_score <THRESHOLD:
 return “Access Denied: Anomaly Detected”
 # Step 4: Apply two-factor lightweight signature verification
 if not verify_signature(user_id, login_attempt):
 return “Access Denied: Signature Mismatch”
 # Step 5: Grant access if all checks pass
 return “Access Granted”
 def compute_auth_score(user_id, login_attempt, behavior_data):
 # Compute authentication score based on behavioral patterns
 score =0
 if login_attempt[“location”] in behavior_data[“frequent_locations”]:
 score +=30
 if login_attempt[“time”] in behavior_data[“usual_times”]:
 score +=40
 if login_attempt[“device”] ==behavior_data[“trusted_device”]:
 score +=30
 return score
 The proposed technique achieves fair verification time, and failures 
observed under different βL factor. The ε(W,te)is performed for D based 
on multiple td Wherein the service-based classifications are performed 
using θ. Therefore, the longevity factor requires less device verification 
time in te+i, for different devices. If multiple devices are experienced, 
verification time is shared between the allocated interaction span. 
Therefore, the time is shared regardless of the devices, preventing high 
delays. The authentication success rate is high for multiple instances, 
reducing failures. In different cases, the longevity is prolonged; the 
verification time is shorter, reducing the number of failures. This means 
the authentication is well restored for different devices, maximizing 
success. An analysis of authentication success and overhead for different 
θ is presented in Fig. 5.
 In the proposed technique, the te≤t and te≤t≤td Conditions are 
validated to provide seamless integration authentication. This ensures 
Fig. 4. Verification Time and Failure (%) for Longevity Factor.
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
9 
failed slots between the interactions in the permitted time slots. 
Therefore, the operating time and further authentication in te+i is 
performed for different devices without retaining the delay. In multiple 
instances, this process is recommended by the learning in γW and γZ for 
providing balanced success without increasing the overhead. The 
overhead is denied in different td=te+i such that ε(Z,te+i)requires no 
additional authorization and interaction authentication. This retains the 
previous security level, preventing additional overheads.
 Although the suggested CA2T methodology shows promise, it has to 
be supported by real-world data to back up its claims. The usefulness of 
CA2T in strengthening security inside Social Computing Systems can be 
validated by implementing a trial deployment and gathering extensive 
performance metrics. Establishing CA2T as a superior solution for secure 
device authorization and authentication will require future research and 
development and rigorous testing.
 4. Results and discussion
 In this section, the performance of the proposed technique is 
analyzed using the ONE simulator. The scenario is packed with 180 user 
devices connected toone cloud server. The cloud scenario is filled with 
four security servers for access and authentication. The interaction span 
is varied between 30 s and 600 s. The performance is analyzed using 
false rate, computational overhead, authentication time, and failure 
metrics. In the comparative analysis, the existing methods, such as VGIS 
[14], G-PATA [15], and NTSC [22], are accounted for.
 A Python framework combining a combination of machine learning, 
cryptographic verification, and cloud-based authentication is used to 
implement the Coherent Authorization and Authentication Technique 
(CA2T). In order to dynamically change authentication based on user 
activity patterns, the system leverages Scikit-learn and TensorFlow for 
behavioural analysis and anomaly detection. For speedy and safe 
credential validation, the lightweight two-factor signature verification 
makes use of the hashlib and PyCryptodome libraries. A Django/Flask- 
based API incorporates CA2T for real-time authentication, allowing 
the authentication engine and client apps to communicate easily. The 
system employs a SQLite/MySQL database to securely store authenti
cation logs and user credentials. Putting CA2T on the cloud maximises 
scalability and real-time processing. Additionally, the system supports 
Internet of Things authentication components. Edge computing devices 
can improve dispersed security enforcement. CA2T reduces authenti
cation delays and improves SCS security by combining adaptive ma
chine learning models with cryptographic security. 
i. False rate
 Fig. 6presents the false rate for different devices and interactions. 
The proposed technique identifies different probabilities for false rates 
as defined for (n+i),w
 Z→0, and W
 Z→i. This is distinguishable for retaining 
the knowledge of the occurrence without reducing βL. The proposed 
technique aims to maximize βL in [td+i]such that ε(W,te)and ε(Z,te+i)
 are concurrent. Therefore, the knowledge of ε(w,te)is retained for (te+
 i)such that the authentication is end-to-end; in this retainment, access to 
resources is defined per the learning process’s recommendations. In all 
γ1 to γ(Z n) and γ1 to γZ n i, the access for authorized users is provided 
without validating further instances. The knowledge-based learning 
retains this state using 
(
 w Z+n i
 Z
 )
 assessment in providing maximum 
security. The joint authentication and authorization features for tj<tR 
and td<tR+i is independently analyzed for mitigating false rates. 
Therefore, the proposed technique maximizes security and data utili
zation under a controlled false rate. 
ii. Computational overhead
 The joint security process for authorization and authentication in
creases the computation overhead. In the proposed technique,YZ n+i is 
computed in t≤te instances for maximum condition assessment. 
Therefore the ε(Z,te+i) indifferent outputs are non-identical in 
providing computations. The θ failures are alone allocated for compu
tations, preventing additional overhead. Besides,βLW
 W n assessment is per
formed for n∈Z implications, such that γZ+j
 γW+j the computation process 
alone mitigates failing continuity. Therefore, the memory and time al
locations are performed for γW=γZ+j such that previous allocation 
delays are considered. In the authorization process, the γW for ε(W,te)
 and γZ∀ε(Z,te+i)are estimated such that the computations are restricted 
for different devices and interaction spans [Refer to Fig. 7]. 
iii. Authentication time
 The authentication time of the proposed technique is comparatively 
less compared to the other methods (Fig. 8). Credential verification 
accounts for the behaviour model in the first device authorization pro
cess. This verification follows (te+i)instances wherein argmin z
 ∀ te
 (te+i) is 
achieved. Therefore, the devices are filtered to grant resource access, 
and deliberate security measures are administered. In the concurrent 
processing states, the γ∀Z i for the behaviour induced and γ∀w j for 
the new devices are accounted for in providing data authentication. The 
first process refines the users based on their existence and βL recom
mending different authentication times. The first γ achieves less 
Fig. 5. Authentication Success and Overhead for different θ.
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
10 
A. Rajesh et al.                                                                                                                                                                                                                                  
Egyptian Informatics Journal 30 (2025) 100675 
Fig. 6. False Rate for Devices and Interaction Span.
 Fig. 7. Overhead for Devices and Interaction Span.
 Fig. 8. Authentication Time for Devices and Interaction Span.
 authentication time regardless of various devices. Based on the inter
action instances, the authentication time is shared unanimously without 
delay. 
iv. Failure
 Information service sharing in the proposed technique is augmented 
using different authentication procedures. First, the credential authen
tication improve β
 L 
by reducing the impact of false usersand maximizing 
serving sessions. In the pursuing instances, the based authentication 
prevents multiple interruptions, achieving an uninterrupted interaction 
span. The conditions t
 d
 <t
 c 
and t
 e
 ≤t are accounted for in the differ
11 
ential output patterns designed using the knowledge-based learning 
identifiers. This process is valid until θ2i∕=0∀i∈γ. Therefore, further 
validations for data sharing and service interval detrainment are pre
ceded based on ε(W,te)other than ε(Y,te). Therefore, the failing induced 
instances are prevented from different td, maximizing delivery. Thus, the 
proposed technique achieves less failure than the other methods [Refer 
to Fig. 9].
 To test CA2T in a real-world setting, use a simulated business 
network or a school’s SCS. Creating a situation that mimics real-world 
usage by including various devices and people is essential. Although 
the suggested CA2T methodology shows promise, it has to be supported 
by real-world data to back up its claims. The usefulness of CA2T in 
strengthening security inside SCScan be validated by implementing a 
trial deployment and gathering extensive performance metrics. Estab
lishing CA2T as the best secure device authorization and authentication 
option requires more research, development, and rigorous testing. The 
above comparisons are summarized in Tables 1 and 2for devices and 
interaction span.
 Several ethical considerations arise when deploying CA2T in SCS, 
such as privacy issues, effects on user agency, and the moral application 
of behaviour data. Implementing CA2T to respect user rights and sup
port ethical principles requires resolving these problems, including data 
reduction, user management, ethical data use, effective security regu
lations, legal conformity, and ethical management. Ensuring that CA2T 
offers safe and moral authorization and authentication in SCS should 
remain a priority for future efforts. The future of CA2T lies in compre
hensive real-world evaluation, increased efficiency, improved security 
and privacy, adaptability and context-aware verification, standardiza
tion and connectivity, andenhanced user experience and usability. 
Future technologies will also be able to work with an authorization al
gorithm to improve our solution in real-time.
 The Coherent Authorisation and Authentication Technique (CA2T) 
scales effectively for large-scale Social Computing Systems (SCS) with 
high device density by managing computational overhead, authentica
tion latency, and false-positive rates. CA2T uses knowledge-based 
learning and behavioural research to dynamically adjust authentica
tion levels, reducing redundant verification requests. Conventional 
authentication systems have exponentially rising processing costs. Real- 
world performance assessments show that CA2T reduces computational 
cost by 12.28 %, authentication time by 11.38 %, and false-positive rates 
by 9.48 % compared to NTSC, enabling real-time authentication in busy 
networks. The lightweight two-factor signature solution avoids 
authentication bottlenecks even as network sizes expand, improving 
processing efficiency. These results show that CA2T can scale to handle 
increased device loads without affecting performance. Researchers 
should consider enterprise-scale deployments that combine blockchain 
decentralization with AI-driven predictive security models to make it 
more scalable and resistant to new attacks.
 4.1. Discussion
 However, there are still certain limits and unanswered questions 
with the suggested Coherent Authorisation and Authentication Tech
nique (CA2T), even if it shows that Social Computing Systems (SCS) are 
capable of improved authentication efficiency and security. The 
computational complexity brought forth by continuous learning is one 
of the main obstacles; in highly trafficked areas, this can cause pro
cessing times to increase. Also, CA2T needs additional validation from 
real-world deployments with millions of users and devices to prove it 
can grow. While knowledge-based learning is beneficial, it can be 
manipulated by adversaries or skewed when it comes to classifying 
behaviour data, which could compromise the suggested technique. 
Obtaining and analysing user behaviour patterns for authentication 
purposes raises privacy issues, which is another constraint. To improve 
data security without sacrificing user confidentiality, future studies 
should investigate privacy-preserving methods such differential privacy 
or federated learning. Also, new security concerns like zero-day attacks 
and complex phishing methods necessitate dynamic and ever-changing 
Fig. 9. Failure for Devices and Interaction Span.
 Table 1 
Comparison Summary (Devices).
 Metrics VGIS G-PATA NTSC CA2T Findings
 False Rate 0.139 0.105 0.083 0.0616 9.48 % 
Less
 Overhead (Mb) 166.12 135.56 105.85 69.115 12.28 % 
Less
 Authentication 
Time (s)
 0.528 0.445 0.39 0.2994 11.38 % 
Less
 Failures 15.32 11.25 9.25 6.201 11.48 % 
Less
 Table 2 
Comparison Summary (Interaction Span).
 Metrics VGIS G-PATA NTSC CA2T Findings
 False Rate 0.14 0.118 0.097 0.0696 9.75 % 
Less
 Overhead (Mb) 168.06 125.02 108.8 79.232 13.62 % 
Less
 Authentication 
Time (s)
 0.533 0.452 0.398 0.2913 12.27 % 
Less
 Failures 15.28 12.11 9.19 5.484 13.42 % 
Less
 A. Rajesh et al.                                                                                                                                                                                                                                  Egyptian Informatics Journal 30 (2025) 100675 
12 
A. Rajesh et al.                                                                                                                                                                                                                                  
Egyptian Informatics Journal 30 (2025) 100675 
security measures; it is unclear how well CA2T can respond to these 
threats. Further strengthening CA2T’s resistance against developing 
cyber threats might be achieved by investigating the integration of 
blockchain-based authentication or AI-driven anomaly detection. 
Important topics for future study and development include these ele
ments and assessments of implementation in the actual world.
 CA2T adapts to different device densities, authentication request 
frequency, and cyber-attack scenarios according to sensitivity research. 
By using knowledge-based learning and behavior-aware credential 
management, CA2T has 11.38 % reduced authentication latency than 
NTSC as device density grows. Its adaptive signature verification re
duces computing cost by 12.28 % while processing high-frequency 
authentication requests. CA2T’s multi-factor authentication and anom
aly detection reduced false-positive rates by 9.48 % in phishing and 
replay attack simulations, demonstrating its robustness. Blockchain- 
backed decentralised authentication and edge computing integration 
improve scalability. CA2T works best in enterprise security frameworks, 
IoT ecosystems, and cloud-based identity management, where AI-driven 
anomaly detection and privacy-preserving solutions may improve per
formance. In current high-density digital systems, CA2T can improve 
security, computing overhead, and resilience by incorporating hybrid 
deployment methodologies, scalable authentication layers, and 
advanced behavioral learning models.
 5. Conclusion
 A new adaptive security framework from the Coherent Authorisation 
and Authentication Technique (CA2T) improves authentication in Social 
Computing Systems (SCS) by fixing some of the main issues with prior 
authentication approaches. CA2T provides real-time, context-aware se
curity using a lightweight two-factor authentication scheme, 
knowledge-based learning, and dynamic credential verification, unlike 
current methods that use static credential validation and resource- 
intensive authentication. By separating computed and behavioural 
data authentication, CA2T achieves optimal authentication accuracy 
while reducing false-positive rates by 9.48 %, computational overhead 
by 12.28 %, and authentication latency by 11.38 %. This makes it 
scalable for dense networks. CA2T raises ethical questions about user 
data security, behavior-based authentication fairness, and privacy 
beyond its technical aspects. To maintain user trust and transparency, 
GDPR and CCPA compliance is essential. Differential privacy and 
federated learning reduce data collection risks. Use fairness-aware AI to 
remove bias in behavior-based learning models to avoid discriminatory 
access choices. Integrating with enterprise security frameworks, IoT 
ecosystems, and cloud-based identity management systems allows CA2T 
to be deployed using a tiered authentication model that adapts security 
levels to user risk profiles. Future research should examine zero-trust 
architecture, blockchain-supported identity management, and AI- 
driven anomaly detection to strengthen CA2T. CA2T’s ethical and reg
ulatory frameworks and technological innovation make it a responsible, 
scalable, and secure authentication solution for modern social 
computing systems.
 CRediT authorship contribution statement
 Anitha Rajesh: Writing – original draft, Methodology, Investigation, 
Formal analysis. Ramamurthy DineshKumar: Validation, Data cura
tion. Saranya Shanmugam: Visualization, Validation. Jaehyuk Cho: 
Project administration, Methodology, Funding acquisition, Formal 
analysis. Sathishkumar Veerappampalayam Easwaramoorthy: 
Writing – review & editing, Writing – original draft, Validation, Super
vision, Software.
 Declaration of competing interest
 The authors declare that they have no known competing financial 
interests or personal relationships that could have appeared to influence 
the work reported in this paper.
 Acknowledgments
 Acknowledgement This work was supported by the Government 
wide R&D Fund Infectious Disease Research(GFID), with a grant funded 
by the government of the Republic of Korea(Ministry of Health and 
welfare), Korea Health Industry Development Institute (KHIDI) (The 
development of infection control and prevention technologies for 
strengthening the infection control capacity of medical institutions), 
under Grant RS-2025-02310471.
 Data availability
 The datasets generated during and/or analyzed during the current 
study are available from the corresponding author on reasonable 
request.
 References
 [1] Tian L, Shang F, Gan C. Optimal control analysis of malware propagation in cloud 
environments. Math Biosci Eng 2023;20(8):14502–17.
 [2] Sui W, Zhou Y, Zhu S, Xu Y, Wang S, Wang D. 5G edge network of collaborative 
computing task-scheduling algorithm with cloud edge. Mob Inf Syst 2022.
 [3] Ouchani S. A security policy hardening framework for Socio-Cyber-Physical 
Systems. J Syst Archit 2021;119:102259.
 [4] Mouratidis H, Shei S, Delaney A. A security requirements modelling language for 
cloud computing environments. Softw Syst Model 2020;19(2):271–95.
 [5] Su M, Zhou B, Fu A, Yu Y, Zhang G. PRTA: a proxy re-encryption based trusted 
authorization scheme for nodes on CloudIoT. Inf Sci 2020;527:533–47.
 [6] Wang F, Yang N, Shakeel PM, Saravanan V. Machine learning for mobile network 
payment security evaluation system. Trans Emerg Telecommun Technol 2021: 
e4226.
 [7] Khan A, Ahmad A, Ahmed M, Sessa J, Anisetti M. Authorization schemes for 
Internet of things: requirements, weaknesses, future challenges and trends. 
Complex Intell Syst 2022;8(5):3919–41.
 [8] Ning Z, Sun S, Wang X, Guo L, Wang G, Gao X, et al. Intelligent resource allocation 
in mobile blockchain for privacy and security transactions: a deep reinforcement 
learning based approach. Sci China Inf Sci 2021;64(6):1–16.
 [9] Wang W, Huang H, Xue L, Li Q, Malekian R, Zhang Y. Blockchain-assisted handover 
authentication for intelligent telehealth in multi-server edge computing 
environment. J Syst Archit 2021;115:102024.
 [10] Kahate SA, Raut AD. An enhanced data confidentiality in online social networks 
using quantum key management with a blockchain approach. In: 2023 14th 
International Conference on Computing Communication and Networking 
Technologies (ICCCNT). IEEE; 2023. p. 1–6.
 [11] Ogundoyin SO, Kamil IA. An efficient authentication scheme with strong privacy 
preservation for fog-assisted vehicular ad hoc networks based on blockchain and 
neuro-fuzzy. Veh Commun 2021;31:100384.
 [12] Mutlaq KAA, Nyangaresi VO, Omar MA, Abduljabbar ZA, Abduljaleel IQ, Ma J, 
et al. Low complexity smart grid security protocol based on elliptic curve 
cryptography, biometrics and hamming distance. PLoS One 2024;19(1):e0296781.
 [13] Fang H, Xiao Z, Wang X, Al-Dhahir N. Lightweight flexible group authentication 
utilizing historical collaboration process information. IEEE Trans Commun 2023; 
71(4):2260–73.
 [14] Zuo X, Li L, Luo S, Peng H, Yang Y, Gong L. Privacy-preserving verifiable graph 
intersection scheme with cryptographic accumulators in social networks. IEEE 
Internet Things J 2020;8(6):4590–603.
 [15] Zhang D, Ma Y, Hu XS, Wang D. Toward privacy-aware task allocation in social 
sensing-based edge computing systems. IEEE Internet Things J 2020;7(12): 
11384–400.
 [16] Al-Muhtadi J, Saleem K, Al-Rabiaah S, Imran M, Gawanmeh A, Rodrigues JJ. 
A lightweight cyber security framework with context-awareness for pervasive 
computing environments. Sustain Cities Soc 2021;66:102610.
 [17] Hossain MJ, Xu C, Li C, Mahmud SH, Zhang X, Li W. ICAS: two-factor identity- 
concealed authentication scheme for remote-servers. J Syst Archit 2021;117: 
102077.
 [18] Alsahlani AYF, Popa A. LMAAS-IoT: lightweight multi-factor authentication and 
authorization scheme for real-time data access in IoT cloud-based environment. 
J Netw Comput Appl 2021;192:103177.
 [19] Cheng X, He B, Li G, Cheng B. A survey of crowdsensing and privacy protection in 
digital city. IEEE Trans Comput Social Syst 2022.
 [20] Sheron PF, Sridhar KP, Baskar S, Shakeel PM. A decentralized scalable security 
framework for end-to-end authentication of future IoT communication. Trans 
Emerg Telecommun Technol 2020;31(12):e3815.
 [21] Li T, Huang G, Zhang S, Zeng Z. NTSC: a novel trust-based service computing 
scheme in social Internet of things. Peer-to-Peer Netw Appl 2021:1–21.
 [22] Saad A. Hybrid secure equivalent computing model for distributed computing 
applications. Wirel Pers Commun 2021:1–21.
 13 
A. Rajesh et al.                                                                                                                                                                                                                                  
Egyptian Informatics Journal 30 (2025) 100675 
[23] Vishwakarma L, Das D. SCAB-IoTA: secure communication and authentication for 
IoT applications using blockchain. J Parallel Distrib Comput 2021;154:94–105.
 [24] Zhao P, Huang H, Zhao X, Huang D. P 3: privacy-preserving scheme against 
poisoning attacks in mobile-edge computing. IEEE Trans Comput Social Syst 2020; 
7(3):818–26.
 [25] Manogaran G, Rawal BS, Saravanan V, Xin Q, Shakeel P. Token-based 
authorization and authentication for secure Internet of vehicles communication. 
ACM Trans Internet Technol 2023;22(4):1–20.
 [26] Puthiyidam JJ, Joseph S, Bhushan B. Enhanced authentication security for IoT 
client nodes through T-ECDSA integrated into MQTT broker. J Supercomput 2024; 
80(7):8898–932.